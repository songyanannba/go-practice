/// PB协议定义
/// Neo

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: protocols.proto

package protocols

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用错误
type Code int32

const (
	Code_CodeUnknown        Code = 0   //未知
	Code_CodeOk             Code = 1   //成功
	Code_CodeParameterError Code = 401 //参数错误
	Code_CodeSystemError    Code = 402 //系统错误
	Code_CodeNotExists      Code = 404 //不存在
	Code_CodeExists         Code = 403 //已存在
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:   "CodeUnknown",
		1:   "CodeOk",
		401: "CodeParameterError",
		402: "CodeSystemError",
		404: "CodeNotExists",
		403: "CodeExists",
	}
	Code_value = map[string]int32{
		"CodeUnknown":        0,
		"CodeOk":             1,
		"CodeParameterError": 401,
		"CodeSystemError":    402,
		"CodeNotExists":      404,
		"CodeExists":         403,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_protocols_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{0}
}

// 服务类型
type ServiceType int32

const (
	ServiceType_ServiceTypeUnknown      ServiceType = 0 //未知
	ServiceType_ServiceTypeAdminBackend ServiceType = 1 //管理后台
	ServiceType_ServiceTypeGame         ServiceType = 2 //游戏
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "ServiceTypeUnknown",
		1: "ServiceTypeAdminBackend",
		2: "ServiceTypeGame",
	}
	ServiceType_value = map[string]int32{
		"ServiceTypeUnknown":      0,
		"ServiceTypeAdminBackend": 1,
		"ServiceTypeGame":         2,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_proto_enumTypes[1].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_protocols_proto_enumTypes[1]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{1}
}

// 消息类型
type MessageType int32

const (
	MessageType_MessageTypeUnknown                                    MessageType = 0  //未知
	MessageType_MessageTypeAddUserRequest                             MessageType = 1  //大厅添加用户请求
	MessageType_MessageTypeAddUserResponse                            MessageType = 2  //大厅添加用户响应
	MessageType_MessageTypeKickOutUserRequest                         MessageType = 3  //大厅踢人请求
	MessageType_MessageTypeKickOutUserResponse                        MessageType = 4  //大厅踢人响应
	MessageType_MessageTypeUpdateGameRequest                          MessageType = 5  //大厅更新游戏请求
	MessageType_MessageTypeUpdateGameResponse                         MessageType = 6  //大厅更新游戏响应
	MessageType_MessageTypeBackendAddUserRequest                      MessageType = 7  //后端添加用户请求
	MessageType_MessageTypeBackendAddUserResponse                     MessageType = 8  //后端添加用户响应
	MessageType_MessageTypeBackendUserTodayGamePlatformReportRequest  MessageType = 9  //后端用户今日游戏平台报表请求
	MessageType_MessageTypeBackendUserTodayGamePlatformReportResponse MessageType = 10 //后端用户今日游戏平台报表响应
	MessageType_MessageTypeBackendUpdateUserRebateAmountRequest       MessageType = 11 //后端更新用户洗码请求
	MessageType_MessageTypeBackendUpdateUserRebateAmountResponse      MessageType = 12 //后端更新用户洗码响应
	MessageType_MessageTypeBackendUpdateUserVIPLotteryRequest         MessageType = 13 //后端更新VIP礼金请求
	MessageType_MessageTypeBackendUpdateUserVIPLotteryResponse        MessageType = 14 //后端更新VIP礼金响应
	MessageType_MessageTypeBackendWithCommissionRequest               MessageType = 15 //后端更新领取佣金请求
	MessageType_MessageTypeBackendWithCommissionResponse              MessageType = 16 //后端更新领取佣金响应
	MessageType_MessageTypeBackendManualDeductEventRouteRequest       MessageType = 17 //后端人工充值消息路由请求
	MessageType_MessageTypeBackendManualDeductEventRouteResponse      MessageType = 18 //后端人工充值消息路由响应
	MessageType_MessageTypeBackendPreferentialEventRouteRequest       MessageType = 19 //后端优惠消息路由请求
	MessageType_MessageTypeBackendPreferentialEventRouteResponse      MessageType = 20 //后端优惠消息路由响应
	MessageType_MessageTypeBackendUserRechargeEventRouteRequest       MessageType = 21 //后端用户充值消息路由请求
	MessageType_MessageTypeBackendUserRechargeEventRouteResponse      MessageType = 22 //后端用户充值消息路由响应
	MessageType_MessageTypeBackendUserWithdrawEventRouteRequest       MessageType = 23 //后端用户提现消息路由请求
	MessageType_MessageTypeBackendUserWithdrawEventRouteResponse      MessageType = 24 //后端用户提现消息路由响应
	MessageType_MessageTypeBackendCacheRefreshEventRouteRequest       MessageType = 25 //缓存刷新请求
	MessageType_MessageTypeBackendCacheRefreshEventRouteResponse      MessageType = 26 //缓存刷新响应
	MessageType_MessageTypeBackendRechargeNotifyRequest               MessageType = 27 //充值结果通知
	MessageType_MessageTypeBackendRechargeNotifyResponse              MessageType = 28 //充值结果通知响应
	MessageType_MessageTypeBackendRecreateAgentTreeRouteRequest       MessageType = 31 //重建代理树路由请求
	MessageType_MessageTypeBackendRecreateAgentTreeRouteResponse      MessageType = 32 //重建代理树路由响应
	MessageType_MessageTypeBackendAgentMoveRouteRequest               MessageType = 33 //代理迁移路由请求
	MessageType_MessageTypeBackendAgentMoveRouteResponse              MessageType = 34 //代理迁移路由响应
	MessageType_MessageTypeGetTodayAgentReportRequest                 MessageType = 35 //获取今日代理报表请求
	MessageType_MessageTypeGetTodayAgentReportResponse                MessageType = 36 //获取今日代理报表响应
	MessageType_MessageTypeKickOutPlatformUserRequest                 MessageType = 37 //大厅平台踢人请求
	MessageType_MessageTypeKickOutPlatformUserResponse                MessageType = 38 //大厅平台踢人响应
	MessageType_MessageTypeChannelEditGameRequest                     MessageType = 39 //渠道禁用游戏修改通知请求
	MessageType_MessageTypeChannelEditGameResponse                    MessageType = 40 //渠道禁用游戏修改通知相应
	MessageType_MessageTypeAgentModeChangeRequest                     MessageType = 41 //用户代理模式变更通知请求
	MessageType_MessageTypeAgentModeChangeResponse                    MessageType = 42 //用户代理模式变更通知响应
	MessageType_MessageTypeBackendMissionCheckRequest                 MessageType = 43 //任务领取奖励请求
	MessageType_MessageTypeBackendMissionCheckResponse                MessageType = 44 //任务领取奖励响应
	MessageType_MessageTypeBackendMissionPrizeRequest                 MessageType = 45 //任务奖励发放通知请求
	MessageType_MessageTypeBackendMissionPrizeResponse                MessageType = 46 //任务奖励发放通知相应
	// 大厅自己给自己发
	MessageType_MessageTypeOfflineUserRequest      MessageType = 101 //顶号通知
	MessageType_MessageTypeOfflineUserResponse     MessageType = 102 //顶号通知响应
	MessageType_MessageTypeTransferObtainRequest   MessageType = 103 //成员转账到账通知
	MessageType_MessageTypeTransferObtainResponse  MessageType = 104 //成员转账到账通知
	MessageType_MessageTypeRedpacketNotifyRequest  MessageType = 105 //红包通知
	MessageType_MessageTypeRedpacketNotifyResponse MessageType = 106 //红包通知
	// 大厅请求后台-代理返佣相关
	MessageType_MessageTypeBackendAgentCommissionPredictRequest  MessageType = 201 //今日佣金预估
	MessageType_MessageTypeBackendAgentCommissionPredictResponse MessageType = 202 //今日佣金预估
	MessageType_MessageTypeBackendAgentCommissionSummaryRequest  MessageType = 203 //佣金信息-汇总页
	MessageType_MessageTypeBackendAgentCommissionSummaryResponse MessageType = 204 //佣金信息-汇总页
	MessageType_MessageTypeBackendAgentCommissionDirectRequest   MessageType = 205 //佣金信息-直推详情
	MessageType_MessageTypeBackendAgentCommissionDirectResponse  MessageType = 206 //佣金信息-直推详情
	MessageType_MessageTypeBackendAgentCommissionDiffRequest     MessageType = 207 //佣金信息-极差直推信息
	MessageType_MessageTypeBackendAgentCommissionDiffResponse    MessageType = 208 //佣金信息-极差直推信息
	MessageType_MessageTypeBackendAgentInfoBetRequest            MessageType = 213 //配置介绍页-代理过往业绩
	MessageType_MessageTypeBackendAgentInfoBetResponse           MessageType = 214 //配置介绍页-代理过往业绩
	MessageType_MessageTypeBackendAgentInfoConfigRequest         MessageType = 215 //极差模式返佣配置
	MessageType_MessageTypeBackendAgentInfoConfigResponse        MessageType = 216 //极差模式返佣配置
	MessageType_MessageTypeBackendAgentModeRequest               MessageType = 217 //返佣模式查询
	MessageType_MessageTypeBackendAgentModeResponse              MessageType = 218 //返佣模式查询
	MessageType_MessageTypeBackendAgentInfoImageRequest          MessageType = 219 //代理介绍图片查询
	MessageType_MessageTypeBackendAgentInfoImageResponse         MessageType = 220 //代理介绍图片查询
	MessageType_MessageTypeBackendAgentCommissionNormalRequest   MessageType = 221 //佣金信息-分销佣金详情
	MessageType_MessageTypeBackendAgentCommissionNormalResponse  MessageType = 222 //佣金信息-分销佣金详情
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:   "MessageTypeUnknown",
		1:   "MessageTypeAddUserRequest",
		2:   "MessageTypeAddUserResponse",
		3:   "MessageTypeKickOutUserRequest",
		4:   "MessageTypeKickOutUserResponse",
		5:   "MessageTypeUpdateGameRequest",
		6:   "MessageTypeUpdateGameResponse",
		7:   "MessageTypeBackendAddUserRequest",
		8:   "MessageTypeBackendAddUserResponse",
		9:   "MessageTypeBackendUserTodayGamePlatformReportRequest",
		10:  "MessageTypeBackendUserTodayGamePlatformReportResponse",
		11:  "MessageTypeBackendUpdateUserRebateAmountRequest",
		12:  "MessageTypeBackendUpdateUserRebateAmountResponse",
		13:  "MessageTypeBackendUpdateUserVIPLotteryRequest",
		14:  "MessageTypeBackendUpdateUserVIPLotteryResponse",
		15:  "MessageTypeBackendWithCommissionRequest",
		16:  "MessageTypeBackendWithCommissionResponse",
		17:  "MessageTypeBackendManualDeductEventRouteRequest",
		18:  "MessageTypeBackendManualDeductEventRouteResponse",
		19:  "MessageTypeBackendPreferentialEventRouteRequest",
		20:  "MessageTypeBackendPreferentialEventRouteResponse",
		21:  "MessageTypeBackendUserRechargeEventRouteRequest",
		22:  "MessageTypeBackendUserRechargeEventRouteResponse",
		23:  "MessageTypeBackendUserWithdrawEventRouteRequest",
		24:  "MessageTypeBackendUserWithdrawEventRouteResponse",
		25:  "MessageTypeBackendCacheRefreshEventRouteRequest",
		26:  "MessageTypeBackendCacheRefreshEventRouteResponse",
		27:  "MessageTypeBackendRechargeNotifyRequest",
		28:  "MessageTypeBackendRechargeNotifyResponse",
		31:  "MessageTypeBackendRecreateAgentTreeRouteRequest",
		32:  "MessageTypeBackendRecreateAgentTreeRouteResponse",
		33:  "MessageTypeBackendAgentMoveRouteRequest",
		34:  "MessageTypeBackendAgentMoveRouteResponse",
		35:  "MessageTypeGetTodayAgentReportRequest",
		36:  "MessageTypeGetTodayAgentReportResponse",
		37:  "MessageTypeKickOutPlatformUserRequest",
		38:  "MessageTypeKickOutPlatformUserResponse",
		39:  "MessageTypeChannelEditGameRequest",
		40:  "MessageTypeChannelEditGameResponse",
		41:  "MessageTypeAgentModeChangeRequest",
		42:  "MessageTypeAgentModeChangeResponse",
		43:  "MessageTypeBackendMissionCheckRequest",
		44:  "MessageTypeBackendMissionCheckResponse",
		45:  "MessageTypeBackendMissionPrizeRequest",
		46:  "MessageTypeBackendMissionPrizeResponse",
		101: "MessageTypeOfflineUserRequest",
		102: "MessageTypeOfflineUserResponse",
		103: "MessageTypeTransferObtainRequest",
		104: "MessageTypeTransferObtainResponse",
		105: "MessageTypeRedpacketNotifyRequest",
		106: "MessageTypeRedpacketNotifyResponse",
		201: "MessageTypeBackendAgentCommissionPredictRequest",
		202: "MessageTypeBackendAgentCommissionPredictResponse",
		203: "MessageTypeBackendAgentCommissionSummaryRequest",
		204: "MessageTypeBackendAgentCommissionSummaryResponse",
		205: "MessageTypeBackendAgentCommissionDirectRequest",
		206: "MessageTypeBackendAgentCommissionDirectResponse",
		207: "MessageTypeBackendAgentCommissionDiffRequest",
		208: "MessageTypeBackendAgentCommissionDiffResponse",
		213: "MessageTypeBackendAgentInfoBetRequest",
		214: "MessageTypeBackendAgentInfoBetResponse",
		215: "MessageTypeBackendAgentInfoConfigRequest",
		216: "MessageTypeBackendAgentInfoConfigResponse",
		217: "MessageTypeBackendAgentModeRequest",
		218: "MessageTypeBackendAgentModeResponse",
		219: "MessageTypeBackendAgentInfoImageRequest",
		220: "MessageTypeBackendAgentInfoImageResponse",
		221: "MessageTypeBackendAgentCommissionNormalRequest",
		222: "MessageTypeBackendAgentCommissionNormalResponse",
	}
	MessageType_value = map[string]int32{
		"MessageTypeUnknown":                                    0,
		"MessageTypeAddUserRequest":                             1,
		"MessageTypeAddUserResponse":                            2,
		"MessageTypeKickOutUserRequest":                         3,
		"MessageTypeKickOutUserResponse":                        4,
		"MessageTypeUpdateGameRequest":                          5,
		"MessageTypeUpdateGameResponse":                         6,
		"MessageTypeBackendAddUserRequest":                      7,
		"MessageTypeBackendAddUserResponse":                     8,
		"MessageTypeBackendUserTodayGamePlatformReportRequest":  9,
		"MessageTypeBackendUserTodayGamePlatformReportResponse": 10,
		"MessageTypeBackendUpdateUserRebateAmountRequest":       11,
		"MessageTypeBackendUpdateUserRebateAmountResponse":      12,
		"MessageTypeBackendUpdateUserVIPLotteryRequest":         13,
		"MessageTypeBackendUpdateUserVIPLotteryResponse":        14,
		"MessageTypeBackendWithCommissionRequest":               15,
		"MessageTypeBackendWithCommissionResponse":              16,
		"MessageTypeBackendManualDeductEventRouteRequest":       17,
		"MessageTypeBackendManualDeductEventRouteResponse":      18,
		"MessageTypeBackendPreferentialEventRouteRequest":       19,
		"MessageTypeBackendPreferentialEventRouteResponse":      20,
		"MessageTypeBackendUserRechargeEventRouteRequest":       21,
		"MessageTypeBackendUserRechargeEventRouteResponse":      22,
		"MessageTypeBackendUserWithdrawEventRouteRequest":       23,
		"MessageTypeBackendUserWithdrawEventRouteResponse":      24,
		"MessageTypeBackendCacheRefreshEventRouteRequest":       25,
		"MessageTypeBackendCacheRefreshEventRouteResponse":      26,
		"MessageTypeBackendRechargeNotifyRequest":               27,
		"MessageTypeBackendRechargeNotifyResponse":              28,
		"MessageTypeBackendRecreateAgentTreeRouteRequest":       31,
		"MessageTypeBackendRecreateAgentTreeRouteResponse":      32,
		"MessageTypeBackendAgentMoveRouteRequest":               33,
		"MessageTypeBackendAgentMoveRouteResponse":              34,
		"MessageTypeGetTodayAgentReportRequest":                 35,
		"MessageTypeGetTodayAgentReportResponse":                36,
		"MessageTypeKickOutPlatformUserRequest":                 37,
		"MessageTypeKickOutPlatformUserResponse":                38,
		"MessageTypeChannelEditGameRequest":                     39,
		"MessageTypeChannelEditGameResponse":                    40,
		"MessageTypeAgentModeChangeRequest":                     41,
		"MessageTypeAgentModeChangeResponse":                    42,
		"MessageTypeBackendMissionCheckRequest":                 43,
		"MessageTypeBackendMissionCheckResponse":                44,
		"MessageTypeBackendMissionPrizeRequest":                 45,
		"MessageTypeBackendMissionPrizeResponse":                46,
		"MessageTypeOfflineUserRequest":                         101,
		"MessageTypeOfflineUserResponse":                        102,
		"MessageTypeTransferObtainRequest":                      103,
		"MessageTypeTransferObtainResponse":                     104,
		"MessageTypeRedpacketNotifyRequest":                     105,
		"MessageTypeRedpacketNotifyResponse":                    106,
		"MessageTypeBackendAgentCommissionPredictRequest":       201,
		"MessageTypeBackendAgentCommissionPredictResponse":      202,
		"MessageTypeBackendAgentCommissionSummaryRequest":       203,
		"MessageTypeBackendAgentCommissionSummaryResponse":      204,
		"MessageTypeBackendAgentCommissionDirectRequest":        205,
		"MessageTypeBackendAgentCommissionDirectResponse":       206,
		"MessageTypeBackendAgentCommissionDiffRequest":          207,
		"MessageTypeBackendAgentCommissionDiffResponse":         208,
		"MessageTypeBackendAgentInfoBetRequest":                 213,
		"MessageTypeBackendAgentInfoBetResponse":                214,
		"MessageTypeBackendAgentInfoConfigRequest":              215,
		"MessageTypeBackendAgentInfoConfigResponse":             216,
		"MessageTypeBackendAgentModeRequest":                    217,
		"MessageTypeBackendAgentModeResponse":                   218,
		"MessageTypeBackendAgentInfoImageRequest":               219,
		"MessageTypeBackendAgentInfoImageResponse":              220,
		"MessageTypeBackendAgentCommissionNormalRequest":        221,
		"MessageTypeBackendAgentCommissionNormalResponse":       222,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_protocols_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{2}
}

type AgentModeType int32

const (
	AgentModeType_AgentModeTypeDefault AgentModeType = 0
	AgentModeType_AgentModeTypeNormal  AgentModeType = 1
	AgentModeType_AgentModeTypeStep    AgentModeType = 2
)

// Enum value maps for AgentModeType.
var (
	AgentModeType_name = map[int32]string{
		0: "AgentModeTypeDefault",
		1: "AgentModeTypeNormal",
		2: "AgentModeTypeStep",
	}
	AgentModeType_value = map[string]int32{
		"AgentModeTypeDefault": 0,
		"AgentModeTypeNormal":  1,
		"AgentModeTypeStep":    2,
	}
)

func (x AgentModeType) Enum() *AgentModeType {
	p := new(AgentModeType)
	*p = x
	return p
}

func (x AgentModeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentModeType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_proto_enumTypes[3].Descriptor()
}

func (AgentModeType) Type() protoreflect.EnumType {
	return &file_protocols_proto_enumTypes[3]
}

func (x AgentModeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentModeType.Descriptor instead.
func (AgentModeType) EnumDescriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{3}
}

type AgentCommissionType int32

const (
	AgentCommissionType_AgentCommissionTypeDefault    AgentCommissionType = 0
	AgentCommissionType_AgentCommissionTypeFiveMins   AgentCommissionType = 1
	AgentCommissionType_AgentCommissionTypeDaily      AgentCommissionType = 2
	AgentCommissionType_AgentCommissionTypeStepDirect AgentCommissionType = 3
	AgentCommissionType_AgentCommissionTypeStepTeam   AgentCommissionType = 4
)

// Enum value maps for AgentCommissionType.
var (
	AgentCommissionType_name = map[int32]string{
		0: "AgentCommissionTypeDefault",
		1: "AgentCommissionTypeFiveMins",
		2: "AgentCommissionTypeDaily",
		3: "AgentCommissionTypeStepDirect",
		4: "AgentCommissionTypeStepTeam",
	}
	AgentCommissionType_value = map[string]int32{
		"AgentCommissionTypeDefault":    0,
		"AgentCommissionTypeFiveMins":   1,
		"AgentCommissionTypeDaily":      2,
		"AgentCommissionTypeStepDirect": 3,
		"AgentCommissionTypeStepTeam":   4,
	}
)

func (x AgentCommissionType) Enum() *AgentCommissionType {
	p := new(AgentCommissionType)
	*p = x
	return p
}

func (x AgentCommissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentCommissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_proto_enumTypes[4].Descriptor()
}

func (AgentCommissionType) Type() protoreflect.EnumType {
	return &file_protocols_proto_enumTypes[4]
}

func (x AgentCommissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentCommissionType.Descriptor instead.
func (AgentCommissionType) EnumDescriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{4}
}

// 消息
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId   int64       `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`                                //消息id
	MessageType MessageType `protobuf:"varint,2,opt,name=messageType,proto3,enum=protocols.MessageType" json:"messageType,omitempty"` //消息类型
	MessageBody []byte      `protobuf:"bytes,3,opt,name=messageBody,proto3" json:"messageBody,omitempty"`                             //消息体
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *Message) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MessageTypeUnknown
}

func (x *Message) GetMessageBody() []byte {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

// 基本响应
type BasicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code   `protobuf:"varint,1,opt,name=code,proto3,enum=protocols.Code" json:"code,omitempty"` //状态码
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                //错误消息
}

func (x *BasicResponse) Reset() {
	*x = BasicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResponse) ProtoMessage() {}

func (x *BasicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResponse.ProtoReflect.Descriptor instead.
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{1}
}

func (x *BasicResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_CodeUnknown
}

func (x *BasicResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 服务注册请求
type ServiceRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType ServiceType `protobuf:"varint,1,opt,name=serviceType,proto3,enum=protocols.ServiceType" json:"serviceType,omitempty"` //服务类型
}

func (x *ServiceRegisterRequest) Reset() {
	*x = ServiceRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRegisterRequest) ProtoMessage() {}

func (x *ServiceRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRegisterRequest.ProtoReflect.Descriptor instead.
func (*ServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceRegisterRequest) GetServiceType() ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ServiceType_ServiceTypeUnknown
}

// 服务注册响应
type ServiceRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *ServiceRegisterResponse) Reset() {
	*x = ServiceRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRegisterResponse) ProtoMessage() {}

func (x *ServiceRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRegisterResponse.ProtoReflect.Descriptor instead.
func (*ServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceRegisterResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *ServiceRegisterResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 大厅添加用户请求
type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp               string `protobuf:"bytes,1,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	AccountName            string `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Password               string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	UpLevelUserAccountName string `protobuf:"bytes,4,opt,name=upLevelUserAccountName,proto3" json:"upLevelUserAccountName,omitempty"`
	RealName               string `protobuf:"bytes,5,opt,name=realName,proto3" json:"realName,omitempty"`
	Remark                 string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{4}
}

func (x *AddUserRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *AddUserRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AddUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserRequest) GetUpLevelUserAccountName() string {
	if x != nil {
		return x.UpLevelUserAccountName
	}
	return ""
}

func (x *AddUserRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AddUserRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 大厅添加用户响应
type AddUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	UserId        int64          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`              //用户id
	ICanDoIt      bool           `protobuf:"varint,3,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *AddUserResponse) Reset() {
	*x = AddUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResponse) ProtoMessage() {}

func (x *AddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResponse.ProtoReflect.Descriptor instead.
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{5}
}

func (x *AddUserResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AddUserResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddUserResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 后台添加用户请求
type BackendAddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
}

func (x *BackendAddUserRequest) Reset() {
	*x = BackendAddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendAddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendAddUserRequest) ProtoMessage() {}

func (x *BackendAddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendAddUserRequest.ProtoReflect.Descriptor instead.
func (*BackendAddUserRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{6}
}

func (x *BackendAddUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 后台添加用户响应
type BackendAddUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *BackendAddUserResponse) Reset() {
	*x = BackendAddUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendAddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendAddUserResponse) ProtoMessage() {}

func (x *BackendAddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendAddUserResponse.ProtoReflect.Descriptor instead.
func (*BackendAddUserResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{7}
}

func (x *BackendAddUserResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *BackendAddUserResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 踢用户下线请求
type KickOutUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
}

func (x *KickOutUserRequest) Reset() {
	*x = KickOutUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutUserRequest) ProtoMessage() {}

func (x *KickOutUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutUserRequest.ProtoReflect.Descriptor instead.
func (*KickOutUserRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{8}
}

func (x *KickOutUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 踢用户下线响应
type KickOutUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *KickOutUserResponse) Reset() {
	*x = KickOutUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutUserResponse) ProtoMessage() {}

func (x *KickOutUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutUserResponse.ProtoReflect.Descriptor instead.
func (*KickOutUserResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{9}
}

func (x *KickOutUserResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *KickOutUserResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 任务审核领取请求
type MissionCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionRecordId int64 `protobuf:"varint,1,opt,name=missionRecordId,proto3" json:"missionRecordId,omitempty"` //任务记录ID
	OperatorId      int32 `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`           //操作人ID
}

func (x *MissionCheckRequest) Reset() {
	*x = MissionCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionCheckRequest) ProtoMessage() {}

func (x *MissionCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionCheckRequest.ProtoReflect.Descriptor instead.
func (*MissionCheckRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{10}
}

func (x *MissionCheckRequest) GetMissionRecordId() int64 {
	if x != nil {
		return x.MissionRecordId
	}
	return 0
}

func (x *MissionCheckRequest) GetOperatorId() int32 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

// 任务审核领取响应
type MissionCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
	Amount        int64          `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`              //彩金
}

func (x *MissionCheckResponse) Reset() {
	*x = MissionCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionCheckResponse) ProtoMessage() {}

func (x *MissionCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionCheckResponse.ProtoReflect.Descriptor instead.
func (*MissionCheckResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{11}
}

func (x *MissionCheckResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *MissionCheckResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *MissionCheckResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 任务审核奖金通知请求
type MissionPrizeNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //userID
	Amount int64  `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"` //金额
	Title  string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`    //标题
}

func (x *MissionPrizeNoticeRequest) Reset() {
	*x = MissionPrizeNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionPrizeNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionPrizeNoticeRequest) ProtoMessage() {}

func (x *MissionPrizeNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionPrizeNoticeRequest.ProtoReflect.Descriptor instead.
func (*MissionPrizeNoticeRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{12}
}

func (x *MissionPrizeNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MissionPrizeNoticeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MissionPrizeNoticeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 任务审核奖励通知相应
type MissionPrizeNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *MissionPrizeNoticeResponse) Reset() {
	*x = MissionPrizeNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionPrizeNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionPrizeNoticeResponse) ProtoMessage() {}

func (x *MissionPrizeNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionPrizeNoticeResponse.ProtoReflect.Descriptor instead.
func (*MissionPrizeNoticeResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{13}
}

func (x *MissionPrizeNoticeResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *MissionPrizeNoticeResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 用户当日游戏平台报表请求
type UserTodayGamePlatformReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                     //用户id
	GamePlatformType int32 `protobuf:"varint,2,opt,name=gamePlatformType,proto3" json:"gamePlatformType,omitempty"` //游戏平台类别
}

func (x *UserTodayGamePlatformReportRequest) Reset() {
	*x = UserTodayGamePlatformReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTodayGamePlatformReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTodayGamePlatformReportRequest) ProtoMessage() {}

func (x *UserTodayGamePlatformReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTodayGamePlatformReportRequest.ProtoReflect.Descriptor instead.
func (*UserTodayGamePlatformReportRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{14}
}

func (x *UserTodayGamePlatformReportRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserTodayGamePlatformReportRequest) GetGamePlatformType() int32 {
	if x != nil {
		return x.GamePlatformType
	}
	return 0
}

// 用户当日游戏平台报表响应
type UserTodayGamePlatformReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	BetAmount     int32          `protobuf:"varint,2,opt,name=betAmount,proto3" json:"betAmount,omitempty"`        //打码总额
	Price         int32          `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`                //派奖总额
	Rebate        int32          `protobuf:"varint,4,opt,name=rebate,proto3" json:"rebate,omitempty"`              //返利总额
	ICanDoIt      bool           `protobuf:"varint,5,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UserTodayGamePlatformReportResponse) Reset() {
	*x = UserTodayGamePlatformReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTodayGamePlatformReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTodayGamePlatformReportResponse) ProtoMessage() {}

func (x *UserTodayGamePlatformReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTodayGamePlatformReportResponse.ProtoReflect.Descriptor instead.
func (*UserTodayGamePlatformReportResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{15}
}

func (x *UserTodayGamePlatformReportResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UserTodayGamePlatformReportResponse) GetBetAmount() int32 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *UserTodayGamePlatformReportResponse) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UserTodayGamePlatformReportResponse) GetRebate() int32 {
	if x != nil {
		return x.Rebate
	}
	return 0
}

func (x *UserTodayGamePlatformReportResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 更新用户洗码金额详情
type UpdateUserRebateAmountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                     //用户id
	GamePlatformType int32 `protobuf:"varint,2,opt,name=gamePlatformType,proto3" json:"gamePlatformType,omitempty"` //游戏类型
	Amount           int32 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                     //总额
	PlatformId       int32 `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`             //游戏平台
}

func (x *UpdateUserRebateAmountDetails) Reset() {
	*x = UpdateUserRebateAmountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRebateAmountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRebateAmountDetails) ProtoMessage() {}

func (x *UpdateUserRebateAmountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRebateAmountDetails.ProtoReflect.Descriptor instead.
func (*UpdateUserRebateAmountDetails) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserRebateAmountDetails) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserRebateAmountDetails) GetGamePlatformType() int32 {
	if x != nil {
		return x.GamePlatformType
	}
	return 0
}

func (x *UpdateUserRebateAmountDetails) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateUserRebateAmountDetails) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// 更新用户洗码金额请求
type UpdateUserRebateAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UpdateUserRebateAmountDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //详情列表
}

func (x *UpdateUserRebateAmountRequest) Reset() {
	*x = UpdateUserRebateAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRebateAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRebateAmountRequest) ProtoMessage() {}

func (x *UpdateUserRebateAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRebateAmountRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRebateAmountRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUserRebateAmountRequest) GetList() []*UpdateUserRebateAmountDetails {
	if x != nil {
		return x.List
	}
	return nil
}

// 更新用户洗码金额响应
type UpdateUserRebateAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UpdateUserRebateAmountResponse) Reset() {
	*x = UpdateUserRebateAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRebateAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRebateAmountResponse) ProtoMessage() {}

func (x *UpdateUserRebateAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRebateAmountResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRebateAmountResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateUserRebateAmountResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UpdateUserRebateAmountResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 更新用户VIP礼金请求
type UpdateUserVIPLotteryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` //总额
}

func (x *UpdateUserVIPLotteryRequest) Reset() {
	*x = UpdateUserVIPLotteryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserVIPLotteryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserVIPLotteryRequest) ProtoMessage() {}

func (x *UpdateUserVIPLotteryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserVIPLotteryRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserVIPLotteryRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateUserVIPLotteryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserVIPLotteryRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 更新用户VIP礼金响应
type UpdateUserVIPLotteryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UpdateUserVIPLotteryResponse) Reset() {
	*x = UpdateUserVIPLotteryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserVIPLotteryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserVIPLotteryResponse) ProtoMessage() {}

func (x *UpdateUserVIPLotteryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserVIPLotteryResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserVIPLotteryResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateUserVIPLotteryResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UpdateUserVIPLotteryResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 更新游戏状态请求
type UpdateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId int32   `protobuf:"varint,1,opt,name=platformId,proto3" json:"platformId,omitempty"`  // 平台id
	GameId     int32   `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`          // 游戏id(弃用)
	GameIds    []int64 `protobuf:"varint,3,rep,packed,name=gameIds,proto3" json:"gameIds,omitempty"` // 游戏id列表
}

func (x *UpdateGameRequest) Reset() {
	*x = UpdateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameRequest) ProtoMessage() {}

func (x *UpdateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateGameRequest) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UpdateGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *UpdateGameRequest) GetGameIds() []int64 {
	if x != nil {
		return x.GameIds
	}
	return nil
}

// 更新游戏状态响应
type UpdateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UpdateGameResponse) Reset() {
	*x = UpdateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameResponse) ProtoMessage() {}

func (x *UpdateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameResponse.ProtoReflect.Descriptor instead.
func (*UpdateGameResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateGameResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UpdateGameResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 提取佣金请求
type WithdrawCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` //金额
}

func (x *WithdrawCommissionRequest) Reset() {
	*x = WithdrawCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommissionRequest) ProtoMessage() {}

func (x *WithdrawCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommissionRequest.ProtoReflect.Descriptor instead.
func (*WithdrawCommissionRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{23}
}

func (x *WithdrawCommissionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WithdrawCommissionRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 提取佣金响应
type WithdrawCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *WithdrawCommissionResponse) Reset() {
	*x = WithdrawCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawCommissionResponse) ProtoMessage() {}

func (x *WithdrawCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawCommissionResponse.ProtoReflect.Descriptor instead.
func (*WithdrawCommissionResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{24}
}

func (x *WithdrawCommissionResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *WithdrawCommissionResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 人工扣款路由请求
type ManualDeductEventRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorFlag bool  `protobuf:"varint,1,opt,name=errorFlag,proto3" json:"errorFlag,omitempty"` //错误标志
	UserId    int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`       //用户id
	Money     int32 `protobuf:"varint,3,opt,name=money,proto3" json:"money,omitempty"`         //金额
}

func (x *ManualDeductEventRouteRequest) Reset() {
	*x = ManualDeductEventRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualDeductEventRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualDeductEventRouteRequest) ProtoMessage() {}

func (x *ManualDeductEventRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualDeductEventRouteRequest.ProtoReflect.Descriptor instead.
func (*ManualDeductEventRouteRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{25}
}

func (x *ManualDeductEventRouteRequest) GetErrorFlag() bool {
	if x != nil {
		return x.ErrorFlag
	}
	return false
}

func (x *ManualDeductEventRouteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ManualDeductEventRouteRequest) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

// 人工扣款路由响应
type ManualDeductEventRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *ManualDeductEventRouteResponse) Reset() {
	*x = ManualDeductEventRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualDeductEventRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualDeductEventRouteResponse) ProtoMessage() {}

func (x *ManualDeductEventRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualDeductEventRouteResponse.ProtoReflect.Descriptor instead.
func (*ManualDeductEventRouteResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{26}
}

func (x *ManualDeductEventRouteResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *ManualDeductEventRouteResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 优惠路由请求
type PreferentialEventRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	Money  int32 `protobuf:"varint,2,opt,name=money,proto3" json:"money,omitempty"`   //金额
}

func (x *PreferentialEventRouteRequest) Reset() {
	*x = PreferentialEventRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferentialEventRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferentialEventRouteRequest) ProtoMessage() {}

func (x *PreferentialEventRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferentialEventRouteRequest.ProtoReflect.Descriptor instead.
func (*PreferentialEventRouteRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{27}
}

func (x *PreferentialEventRouteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PreferentialEventRouteRequest) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

// 优惠路由响应
type PreferentialEventRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *PreferentialEventRouteResponse) Reset() {
	*x = PreferentialEventRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferentialEventRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferentialEventRouteResponse) ProtoMessage() {}

func (x *PreferentialEventRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferentialEventRouteResponse.ProtoReflect.Descriptor instead.
func (*PreferentialEventRouteResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{28}
}

func (x *PreferentialEventRouteResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *PreferentialEventRouteResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 用户充值路由请求
type UserRechargeEventRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId              int64  `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`                           //渠道id
	ChannelName            string `protobuf:"bytes,2,opt,name=channelName,proto3" json:"channelName,omitempty"`                        //渠道名
	ChannelCreateTimestamp int64  `protobuf:"varint,3,opt,name=channelCreateTimestamp,proto3" json:"channelCreateTimestamp,omitempty"` //渠道创建时间戳
	UserId                 int64  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`                                 //用户id
	UserName               string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`                              //用户名称
	RealName               string `protobuf:"bytes,6,opt,name=realName,proto3" json:"realName,omitempty"`                              //真实姓名
	RechargeType           int32  `protobuf:"varint,7,opt,name=rechargeType,proto3" json:"rechargeType,omitempty"`                     //充值类型
	IsFirst                bool   `protobuf:"varint,8,opt,name=isFirst,proto3" json:"isFirst,omitempty"`                               //是否首次充值
	Money                  int32  `protobuf:"varint,9,opt,name=money,proto3" json:"money,omitempty"`                                   //充值金额
}

func (x *UserRechargeEventRouteRequest) Reset() {
	*x = UserRechargeEventRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRechargeEventRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRechargeEventRouteRequest) ProtoMessage() {}

func (x *UserRechargeEventRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRechargeEventRouteRequest.ProtoReflect.Descriptor instead.
func (*UserRechargeEventRouteRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{29}
}

func (x *UserRechargeEventRouteRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UserRechargeEventRouteRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *UserRechargeEventRouteRequest) GetChannelCreateTimestamp() int64 {
	if x != nil {
		return x.ChannelCreateTimestamp
	}
	return 0
}

func (x *UserRechargeEventRouteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserRechargeEventRouteRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserRechargeEventRouteRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserRechargeEventRouteRequest) GetRechargeType() int32 {
	if x != nil {
		return x.RechargeType
	}
	return 0
}

func (x *UserRechargeEventRouteRequest) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

func (x *UserRechargeEventRouteRequest) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

// 用户充值路由响应
type UserRechargeEventRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UserRechargeEventRouteResponse) Reset() {
	*x = UserRechargeEventRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRechargeEventRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRechargeEventRouteResponse) ProtoMessage() {}

func (x *UserRechargeEventRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRechargeEventRouteResponse.ProtoReflect.Descriptor instead.
func (*UserRechargeEventRouteResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{30}
}

func (x *UserRechargeEventRouteResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UserRechargeEventRouteResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 用户提现路由请求
type UserWithdrawEventRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId              int64  `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`                           //渠道id
	ChannelName            string `protobuf:"bytes,2,opt,name=channelName,proto3" json:"channelName,omitempty"`                        //渠道名
	ChannelCreateTimestamp int64  `protobuf:"varint,3,opt,name=channelCreateTimestamp,proto3" json:"channelCreateTimestamp,omitempty"` //渠道创建时间戳
	UserId                 int64  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`                                 //用户id
	UserName               string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`                              //用户名
	RealName               string `protobuf:"bytes,6,opt,name=realName,proto3" json:"realName,omitempty"`                              //真实姓名
	IsFirst                bool   `protobuf:"varint,7,opt,name=isFirst,proto3" json:"isFirst,omitempty"`                               //是否首次提现
	Money                  int32  `protobuf:"varint,8,opt,name=money,proto3" json:"money,omitempty"`                                   //金额
}

func (x *UserWithdrawEventRouteRequest) Reset() {
	*x = UserWithdrawEventRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdrawEventRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdrawEventRouteRequest) ProtoMessage() {}

func (x *UserWithdrawEventRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdrawEventRouteRequest.ProtoReflect.Descriptor instead.
func (*UserWithdrawEventRouteRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{31}
}

func (x *UserWithdrawEventRouteRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UserWithdrawEventRouteRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *UserWithdrawEventRouteRequest) GetChannelCreateTimestamp() int64 {
	if x != nil {
		return x.ChannelCreateTimestamp
	}
	return 0
}

func (x *UserWithdrawEventRouteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserWithdrawEventRouteRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserWithdrawEventRouteRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserWithdrawEventRouteRequest) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

func (x *UserWithdrawEventRouteRequest) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

// 用户提现路由响应
type UserWithdrawEventRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *UserWithdrawEventRouteResponse) Reset() {
	*x = UserWithdrawEventRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdrawEventRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdrawEventRouteResponse) ProtoMessage() {}

func (x *UserWithdrawEventRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdrawEventRouteResponse.ProtoReflect.Descriptor instead.
func (*UserWithdrawEventRouteResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{32}
}

func (x *UserWithdrawEventRouteResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *UserWithdrawEventRouteResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 缓存刷新请求
type CacheRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey string `protobuf:"bytes,1,opt,name=cacheKey,proto3" json:"cacheKey,omitempty"` //缓存key
}

func (x *CacheRefreshRequest) Reset() {
	*x = CacheRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRefreshRequest) ProtoMessage() {}

func (x *CacheRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRefreshRequest.ProtoReflect.Descriptor instead.
func (*CacheRefreshRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{33}
}

func (x *CacheRefreshRequest) GetCacheKey() string {
	if x != nil {
		return x.CacheKey
	}
	return ""
}

// 缓存刷新响应
type CacheRefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *CacheRefreshResponse) Reset() {
	*x = CacheRefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRefreshResponse) ProtoMessage() {}

func (x *CacheRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRefreshResponse.ProtoReflect.Descriptor instead.
func (*CacheRefreshResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{34}
}

func (x *CacheRefreshResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *CacheRefreshResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 顶号请求
type OfflineUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *OfflineUserRequest) Reset() {
	*x = OfflineUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineUserRequest) ProtoMessage() {}

func (x *OfflineUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineUserRequest.ProtoReflect.Descriptor instead.
func (*OfflineUserRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{35}
}

func (x *OfflineUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 顶号响应
type OfflineUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *OfflineUserResponse) Reset() {
	*x = OfflineUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineUserResponse) ProtoMessage() {}

func (x *OfflineUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineUserResponse.ProtoReflect.Descriptor instead.
func (*OfflineUserResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{36}
}

func (x *OfflineUserResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *OfflineUserResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 充值结果通知
type BackendRechargeNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	RecordId int32 `protobuf:"varint,2,opt,name=recordId,proto3" json:"recordId,omitempty"` //充值记录id
}

func (x *BackendRechargeNotifyRequest) Reset() {
	*x = BackendRechargeNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendRechargeNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendRechargeNotifyRequest) ProtoMessage() {}

func (x *BackendRechargeNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendRechargeNotifyRequest.ProtoReflect.Descriptor instead.
func (*BackendRechargeNotifyRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{37}
}

func (x *BackendRechargeNotifyRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BackendRechargeNotifyRequest) GetRecordId() int32 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

// 充值结果通知响应
type BackendRechargeNotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *BackendRechargeNotifyResponse) Reset() {
	*x = BackendRechargeNotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendRechargeNotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendRechargeNotifyResponse) ProtoMessage() {}

func (x *BackendRechargeNotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendRechargeNotifyResponse.ProtoReflect.Descriptor instead.
func (*BackendRechargeNotifyResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{38}
}

func (x *BackendRechargeNotifyResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *BackendRechargeNotifyResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 重建代理树请求
type RecreateAgentTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecreateAgentTreeRequest) Reset() {
	*x = RecreateAgentTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecreateAgentTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecreateAgentTreeRequest) ProtoMessage() {}

func (x *RecreateAgentTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecreateAgentTreeRequest.ProtoReflect.Descriptor instead.
func (*RecreateAgentTreeRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{39}
}

// 重建代理树响应
type RecreateAgentTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *RecreateAgentTreeResponse) Reset() {
	*x = RecreateAgentTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecreateAgentTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecreateAgentTreeResponse) ProtoMessage() {}

func (x *RecreateAgentTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecreateAgentTreeResponse.ProtoReflect.Descriptor instead.
func (*RecreateAgentTreeResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{40}
}

func (x *RecreateAgentTreeResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *RecreateAgentTreeResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 代理迁移请求
type AgentMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`               //源节点
	To          int64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`                   //目标节点
	IncludeFrom bool  `protobuf:"varint,3,opt,name=includeFrom,proto3" json:"includeFrom,omitempty"` //包含源节点
}

func (x *AgentMoveRequest) Reset() {
	*x = AgentMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMoveRequest) ProtoMessage() {}

func (x *AgentMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMoveRequest.ProtoReflect.Descriptor instead.
func (*AgentMoveRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{41}
}

func (x *AgentMoveRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *AgentMoveRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *AgentMoveRequest) GetIncludeFrom() bool {
	if x != nil {
		return x.IncludeFrom
	}
	return false
}

// 代理迁移响应
type AgentMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
	MoveResult    int32          `protobuf:"varint,3,opt,name=moveResult,proto3" json:"moveResult,omitempty"`      //迁移结果
}

func (x *AgentMoveResponse) Reset() {
	*x = AgentMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMoveResponse) ProtoMessage() {}

func (x *AgentMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMoveResponse.ProtoReflect.Descriptor instead.
func (*AgentMoveResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{42}
}

func (x *AgentMoveResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentMoveResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentMoveResponse) GetMoveResult() int32 {
	if x != nil {
		return x.MoveResult
	}
	return 0
}

// 获取代理报表请求
type GetAgentReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentReportRequest) Reset() {
	*x = GetAgentReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentReportRequest) ProtoMessage() {}

func (x *GetAgentReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentReportRequest.ProtoReflect.Descriptor instead.
func (*GetAgentReportRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{43}
}

// 代理综合报表记录
type AgentReportEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                        int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                               //用户id
	AgentLevel                 int32 `protobuf:"varint,2,opt,name=agentLevel,proto3" json:"agentLevel,omitempty"`                                 //代理层级
	ChildrenNumber             int64 `protobuf:"varint,3,opt,name=childrenNumber,proto3" json:"childrenNumber,omitempty"`                         //孩子总数
	TotalRecharge              int64 `protobuf:"varint,4,opt,name=totalRecharge,proto3" json:"totalRecharge,omitempty"`                           //总充值
	TotalWithdraw              int64 `protobuf:"varint,5,opt,name=totalWithdraw,proto3" json:"totalWithdraw,omitempty"`                           //总提现
	TotalBet                   int64 `protobuf:"varint,6,opt,name=totalBet,proto3" json:"totalBet,omitempty"`                                     //总打码
	TotalCommission            int64 `protobuf:"varint,7,opt,name=totalCommission,proto3" json:"totalCommission,omitempty"`                       //总佣金
	StepCommissionDirectAmount int64 `protobuf:"varint,8,opt,name=stepCommissionDirectAmount,proto3" json:"stepCommissionDirectAmount,omitempty"` //直推返佣
	StepCommissionTeamAmount   int64 `protobuf:"varint,9,opt,name=stepCommissionTeamAmount,proto3" json:"stepCommissionTeamAmount,omitempty"`     //团队返佣
	DirectBetAmount            int64 `protobuf:"varint,10,opt,name=directBetAmount,proto3" json:"directBetAmount,omitempty"`                      //直推业绩
	TeamBetAmount              int64 `protobuf:"varint,11,opt,name=teamBetAmount,proto3" json:"teamBetAmount,omitempty"`                          //团队业绩
	RegisterTimestamp          int64 `protobuf:"varint,12,opt,name=registerTimestamp,proto3" json:"registerTimestamp,omitempty"`                  //注册时间戳
}

func (x *AgentReportEntry) Reset() {
	*x = AgentReportEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentReportEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentReportEntry) ProtoMessage() {}

func (x *AgentReportEntry) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentReportEntry.ProtoReflect.Descriptor instead.
func (*AgentReportEntry) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{44}
}

func (x *AgentReportEntry) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AgentReportEntry) GetAgentLevel() int32 {
	if x != nil {
		return x.AgentLevel
	}
	return 0
}

func (x *AgentReportEntry) GetChildrenNumber() int64 {
	if x != nil {
		return x.ChildrenNumber
	}
	return 0
}

func (x *AgentReportEntry) GetTotalRecharge() int64 {
	if x != nil {
		return x.TotalRecharge
	}
	return 0
}

func (x *AgentReportEntry) GetTotalWithdraw() int64 {
	if x != nil {
		return x.TotalWithdraw
	}
	return 0
}

func (x *AgentReportEntry) GetTotalBet() int64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *AgentReportEntry) GetTotalCommission() int64 {
	if x != nil {
		return x.TotalCommission
	}
	return 0
}

func (x *AgentReportEntry) GetStepCommissionDirectAmount() int64 {
	if x != nil {
		return x.StepCommissionDirectAmount
	}
	return 0
}

func (x *AgentReportEntry) GetStepCommissionTeamAmount() int64 {
	if x != nil {
		return x.StepCommissionTeamAmount
	}
	return 0
}

func (x *AgentReportEntry) GetDirectBetAmount() int64 {
	if x != nil {
		return x.DirectBetAmount
	}
	return 0
}

func (x *AgentReportEntry) GetTeamBetAmount() int64 {
	if x != nil {
		return x.TeamBetAmount
	}
	return 0
}

func (x *AgentReportEntry) GetRegisterTimestamp() int64 {
	if x != nil {
		return x.RegisterTimestamp
	}
	return 0
}

// 获取代理报表响应
type GetAgentReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse      `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基本响应
	ICanDoIt      bool                `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
	EntryList     []*AgentReportEntry `protobuf:"bytes,3,rep,name=entryList,proto3" json:"entryList,omitempty"`         //记录列表
}

func (x *GetAgentReportResponse) Reset() {
	*x = GetAgentReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentReportResponse) ProtoMessage() {}

func (x *GetAgentReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentReportResponse.ProtoReflect.Descriptor instead.
func (*GetAgentReportResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{45}
}

func (x *GetAgentReportResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *GetAgentReportResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *GetAgentReportResponse) GetEntryList() []*AgentReportEntry {
	if x != nil {
		return x.EntryList
	}
	return nil
}

// 成员转账到账通知请求
type TransferObtainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount     int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	FromUserId int64 `protobuf:"varint,4,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
}

func (x *TransferObtainRequest) Reset() {
	*x = TransferObtainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferObtainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferObtainRequest) ProtoMessage() {}

func (x *TransferObtainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferObtainRequest.ProtoReflect.Descriptor instead.
func (*TransferObtainRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{46}
}

func (x *TransferObtainRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferObtainRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferObtainRequest) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

type TransferObtainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *TransferObtainResponse) Reset() {
	*x = TransferObtainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferObtainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferObtainResponse) ProtoMessage() {}

func (x *TransferObtainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferObtainResponse.ProtoReflect.Descriptor instead.
func (*TransferObtainResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{47}
}

func (x *TransferObtainResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *TransferObtainResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

type RedpacketNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedpacketId int32   `protobuf:"varint,2,opt,name=redpacket_id,json=redpacketId,proto3" json:"redpacket_id,omitempty"` //红包id
	Title       string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                 //标题
	StartAt     int64   `protobuf:"varint,4,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`             //开始时间
	ExpireAt    int64   `protobuf:"varint,5,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`          //结束时间
	UserIds     []int32 `protobuf:"varint,6,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`      //用户列表
}

func (x *RedpacketNotifyRequest) Reset() {
	*x = RedpacketNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedpacketNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedpacketNotifyRequest) ProtoMessage() {}

func (x *RedpacketNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedpacketNotifyRequest.ProtoReflect.Descriptor instead.
func (*RedpacketNotifyRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{48}
}

func (x *RedpacketNotifyRequest) GetRedpacketId() int32 {
	if x != nil {
		return x.RedpacketId
	}
	return 0
}

func (x *RedpacketNotifyRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RedpacketNotifyRequest) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *RedpacketNotifyRequest) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *RedpacketNotifyRequest) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type RedpacketNotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *RedpacketNotifyResponse) Reset() {
	*x = RedpacketNotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedpacketNotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedpacketNotifyResponse) ProtoMessage() {}

func (x *RedpacketNotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedpacketNotifyResponse.ProtoReflect.Descriptor instead.
func (*RedpacketNotifyResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{49}
}

func (x *RedpacketNotifyResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *RedpacketNotifyResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 渠道修改禁用游戏请求
type ChannelGameEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelIds []int64 `protobuf:"varint,1,rep,packed,name=channel_ids,json=channelIds,proto3" json:"channel_ids,omitempty"`
}

func (x *ChannelGameEditRequest) Reset() {
	*x = ChannelGameEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelGameEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelGameEditRequest) ProtoMessage() {}

func (x *ChannelGameEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelGameEditRequest.ProtoReflect.Descriptor instead.
func (*ChannelGameEditRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{50}
}

func (x *ChannelGameEditRequest) GetChannelIds() []int64 {
	if x != nil {
		return x.ChannelIds
	}
	return nil
}

// 渠道修改禁用游戏响应
type ChannelGameEditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *ChannelGameEditResponse) Reset() {
	*x = ChannelGameEditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelGameEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelGameEditResponse) ProtoMessage() {}

func (x *ChannelGameEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelGameEditResponse.ProtoReflect.Descriptor instead.
func (*ChannelGameEditResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{51}
}

func (x *ChannelGameEditResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *ChannelGameEditResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 踢线下分请求
type KickOutPlatformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`    //用户ID
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"` //平台编号
}

func (x *KickOutPlatformRequest) Reset() {
	*x = KickOutPlatformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutPlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutPlatformRequest) ProtoMessage() {}

func (x *KickOutPlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutPlatformRequest.ProtoReflect.Descriptor instead.
func (*KickOutPlatformRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{52}
}

func (x *KickOutPlatformRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *KickOutPlatformRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// 踢线下分响应
type KickOutPlatformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=ICanDoIt,proto3" json:"ICanDoIt,omitempty"`          //可以执行这个请求
}

func (x *KickOutPlatformResponse) Reset() {
	*x = KickOutPlatformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutPlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutPlatformResponse) ProtoMessage() {}

func (x *KickOutPlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutPlatformResponse.ProtoReflect.Descriptor instead.
func (*KickOutPlatformResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{53}
}

func (x *KickOutPlatformResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *KickOutPlatformResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 今日佣金预估请求
type AgentCommissionPredictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户ID
}

func (x *AgentCommissionPredictRequest) Reset() {
	*x = AgentCommissionPredictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionPredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionPredictRequest) ProtoMessage() {}

func (x *AgentCommissionPredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionPredictRequest.ProtoReflect.Descriptor instead.
func (*AgentCommissionPredictRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{54}
}

func (x *AgentCommissionPredictRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 今日佣金预估响应
type AgentCommissionPredictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Commission    int64          `protobuf:"varint,3,opt,name=commission,proto3" json:"commission,omitempty"`      //预估佣金金额
}

func (x *AgentCommissionPredictResponse) Reset() {
	*x = AgentCommissionPredictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionPredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionPredictResponse) ProtoMessage() {}

func (x *AgentCommissionPredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionPredictResponse.ProtoReflect.Descriptor instead.
func (*AgentCommissionPredictResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{55}
}

func (x *AgentCommissionPredictResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentCommissionPredictResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentCommissionPredictResponse) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"` //每页条数
	PageNum  int32 `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`   //页码
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{56}
}

func (x *PageInfo) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageInfo) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

// 佣金信息-汇总页请求
type AgentCommissionSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page               *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                              //分页
	UserId             int64     `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`                         //用户ID
	ContributionUserId int64     `protobuf:"varint,3,opt,name=contributionUserId,proto3" json:"contributionUserId,omitempty"` //下级贡献用户ID
}

func (x *AgentCommissionSummaryRequest) Reset() {
	*x = AgentCommissionSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionSummaryRequest) ProtoMessage() {}

func (x *AgentCommissionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionSummaryRequest.ProtoReflect.Descriptor instead.
func (*AgentCommissionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{57}
}

func (x *AgentCommissionSummaryRequest) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionSummaryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgentCommissionSummaryRequest) GetContributionUserId() int64 {
	if x != nil {
		return x.ContributionUserId
	}
	return 0
}

// 佣金信息-汇总页响应
type AgentCommissionSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse                `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"`  //基础响应
	ICanDoIt      bool                          `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`           //可以执行这个请求
	Page          *PageInfo                     `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                    //分页
	Items         []*AgentCommissionSummaryItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                  //数据
	SumCommission int64                         `protobuf:"varint,5,opt,name=sumCommission,proto3" json:"sumCommission,omitempty"` //总佣金
}

func (x *AgentCommissionSummaryResponse) Reset() {
	*x = AgentCommissionSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionSummaryResponse) ProtoMessage() {}

func (x *AgentCommissionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionSummaryResponse.ProtoReflect.Descriptor instead.
func (*AgentCommissionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{58}
}

func (x *AgentCommissionSummaryResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentCommissionSummaryResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentCommissionSummaryResponse) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionSummaryResponse) GetItems() []*AgentCommissionSummaryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AgentCommissionSummaryResponse) GetSumCommission() int64 {
	if x != nil {
		return x.SumCommission
	}
	return 0
}

type AgentCommissionSummaryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordNo       string `protobuf:"bytes,1,opt,name=recordNo,proto3" json:"recordNo,omitempty"`              //记录ID
	CreateTime     int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`         //结算时间
	CommissionType int32  `protobuf:"varint,3,opt,name=commissionType,proto3" json:"commissionType,omitempty"` //返佣类型
	CategoryId     int32  `protobuf:"varint,4,opt,name=categoryId,proto3" json:"categoryId,omitempty"`         //游戏类型ID
	Commission     int64  `protobuf:"varint,5,opt,name=commission,proto3" json:"commission,omitempty"`         //所得佣金
	Contributes    int32  `protobuf:"varint,6,opt,name=contributes,proto3" json:"contributes,omitempty"`       //人数
}

func (x *AgentCommissionSummaryItem) Reset() {
	*x = AgentCommissionSummaryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionSummaryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionSummaryItem) ProtoMessage() {}

func (x *AgentCommissionSummaryItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionSummaryItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionSummaryItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{59}
}

func (x *AgentCommissionSummaryItem) GetRecordNo() string {
	if x != nil {
		return x.RecordNo
	}
	return ""
}

func (x *AgentCommissionSummaryItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AgentCommissionSummaryItem) GetCommissionType() int32 {
	if x != nil {
		return x.CommissionType
	}
	return 0
}

func (x *AgentCommissionSummaryItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentCommissionSummaryItem) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *AgentCommissionSummaryItem) GetContributes() int32 {
	if x != nil {
		return x.Contributes
	}
	return 0
}

// 佣金信息-直推详情请求
type AgentCommissionDirectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                  //分页
	RecordNo     string    `protobuf:"bytes,2,opt,name=recordNo,proto3" json:"recordNo,omitempty"`          //汇总页记录ID
	UserId       int64     `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`             //用户ID
	DirectUserId int64     `protobuf:"varint,4,opt,name=directUserId,proto3" json:"directUserId,omitempty"` //直推用户ID
}

func (x *AgentCommissionDirectRequest) Reset() {
	*x = AgentCommissionDirectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDirectRequest) ProtoMessage() {}

func (x *AgentCommissionDirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDirectRequest.ProtoReflect.Descriptor instead.
func (*AgentCommissionDirectRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{60}
}

func (x *AgentCommissionDirectRequest) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionDirectRequest) GetRecordNo() string {
	if x != nil {
		return x.RecordNo
	}
	return ""
}

func (x *AgentCommissionDirectRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgentCommissionDirectRequest) GetDirectUserId() int64 {
	if x != nil {
		return x.DirectUserId
	}
	return 0
}

// 佣金信息-直推详情响应
type AgentCommissionDirectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse               `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool                         `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Page          *PageInfo                    `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                   //分页
	Items         []*AgentCommissionDirectItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                 //数据
	SumBet        int64                        `protobuf:"varint,5,opt,name=sumBet,proto3" json:"sumBet,omitempty"`              //总业绩
	SumDirectBet  int64                        `protobuf:"varint,6,opt,name=sumDirectBet,proto3" json:"sumDirectBet,omitempty"`  //直推业绩
}

func (x *AgentCommissionDirectResponse) Reset() {
	*x = AgentCommissionDirectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDirectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDirectResponse) ProtoMessage() {}

func (x *AgentCommissionDirectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDirectResponse.ProtoReflect.Descriptor instead.
func (*AgentCommissionDirectResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{61}
}

func (x *AgentCommissionDirectResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentCommissionDirectResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentCommissionDirectResponse) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionDirectResponse) GetItems() []*AgentCommissionDirectItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AgentCommissionDirectResponse) GetSumBet() int64 {
	if x != nil {
		return x.SumBet
	}
	return 0
}

func (x *AgentCommissionDirectResponse) GetSumDirectBet() int64 {
	if x != nil {
		return x.SumDirectBet
	}
	return 0
}

type AgentCommissionDirectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         //记录ID
	DirectUserId   int64 `protobuf:"varint,2,opt,name=directUserId,proto3" json:"directUserId,omitempty"`     //直推成员ID
	CategoryId     int32 `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`         //游戏类型ID
	Level          int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                   //代理等级
	DirectBet      int64 `protobuf:"varint,5,opt,name=directBet,proto3" json:"directBet,omitempty"`           //直推业绩
	CommissionRate int32 `protobuf:"varint,6,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"` //返佣比例(万分比)
	Commission     int64 `protobuf:"varint,7,opt,name=commission,proto3" json:"commission,omitempty"`         //获得佣金
}

func (x *AgentCommissionDirectItem) Reset() {
	*x = AgentCommissionDirectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDirectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDirectItem) ProtoMessage() {}

func (x *AgentCommissionDirectItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDirectItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionDirectItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{62}
}

func (x *AgentCommissionDirectItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetDirectUserId() int64 {
	if x != nil {
		return x.DirectUserId
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetDirectBet() int64 {
	if x != nil {
		return x.DirectBet
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetCommissionRate() int32 {
	if x != nil {
		return x.CommissionRate
	}
	return 0
}

func (x *AgentCommissionDirectItem) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

// 佣金信息-极差直推信息
type AgentCommissionDiffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                  //分页
	RecordNo     string    `protobuf:"bytes,2,opt,name=recordNo,proto3" json:"recordNo,omitempty"`          //汇总页记录ID
	UserId       int64     `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`             //用户ID
	DirectUserId int64     `protobuf:"varint,4,opt,name=directUserId,proto3" json:"directUserId,omitempty"` //直推用户ID
}

func (x *AgentCommissionDiffRequest) Reset() {
	*x = AgentCommissionDiffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDiffRequest) ProtoMessage() {}

func (x *AgentCommissionDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDiffRequest.ProtoReflect.Descriptor instead.
func (*AgentCommissionDiffRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{63}
}

func (x *AgentCommissionDiffRequest) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionDiffRequest) GetRecordNo() string {
	if x != nil {
		return x.RecordNo
	}
	return ""
}

func (x *AgentCommissionDiffRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgentCommissionDiffRequest) GetDirectUserId() int64 {
	if x != nil {
		return x.DirectUserId
	}
	return 0
}

// 佣金信息-极差直推信息
type AgentCommissionDiffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse             `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool                       `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Page          *PageInfo                  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                   //分页
	Items         []*AgentCommissionDiffItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                 //数据
	SumBet        int64                      `protobuf:"varint,5,opt,name=sumBet,proto3" json:"sumBet,omitempty"`              //总业绩
	SumTeamBet    int64                      `protobuf:"varint,6,opt,name=sumTeamBet,proto3" json:"sumTeamBet,omitempty"`      //团队业绩
}

func (x *AgentCommissionDiffResponse) Reset() {
	*x = AgentCommissionDiffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDiffResponse) ProtoMessage() {}

func (x *AgentCommissionDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDiffResponse.ProtoReflect.Descriptor instead.
func (*AgentCommissionDiffResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{64}
}

func (x *AgentCommissionDiffResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentCommissionDiffResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentCommissionDiffResponse) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionDiffResponse) GetItems() []*AgentCommissionDiffItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AgentCommissionDiffResponse) GetSumBet() int64 {
	if x != nil {
		return x.SumBet
	}
	return 0
}

func (x *AgentCommissionDiffResponse) GetSumTeamBet() int64 {
	if x != nil {
		return x.SumTeamBet
	}
	return 0
}

type AgentCommissionDiffItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         //记录ID
	DirectUserId   int64 `protobuf:"varint,2,opt,name=directUserId,proto3" json:"directUserId,omitempty"`     //直推成员ID
	CategoryId     int32 `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`         //游戏类型ID
	Level          int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                   //代理等级
	TeamBet        int64 `protobuf:"varint,5,opt,name=teamBet,proto3" json:"teamBet,omitempty"`               //团队业绩
	CommissionRate int32 `protobuf:"varint,6,opt,name=commissionRate,proto3" json:"commissionRate,omitempty"` //返佣比(万分比)
	Commission     int64 `protobuf:"varint,7,opt,name=commission,proto3" json:"commission,omitempty"`         //获得佣金
	SumRate        int32 `protobuf:"varint,8,opt,name=sumRate,proto3" json:"sumRate,omitempty"`               //总业绩返佣比(万分比)
	TeamRate       int32 `protobuf:"varint,9,opt,name=teamRate,proto3" json:"teamRate,omitempty"`             //团队业绩返佣比(万分比)
}

func (x *AgentCommissionDiffItem) Reset() {
	*x = AgentCommissionDiffItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionDiffItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionDiffItem) ProtoMessage() {}

func (x *AgentCommissionDiffItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionDiffItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionDiffItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{65}
}

func (x *AgentCommissionDiffItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetDirectUserId() int64 {
	if x != nil {
		return x.DirectUserId
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetTeamBet() int64 {
	if x != nil {
		return x.TeamBet
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetCommissionRate() int32 {
	if x != nil {
		return x.CommissionRate
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetSumRate() int32 {
	if x != nil {
		return x.SumRate
	}
	return 0
}

func (x *AgentCommissionDiffItem) GetTeamRate() int32 {
	if x != nil {
		return x.TeamRate
	}
	return 0
}

// 佣金信息-分销佣金信息
type AgentCommissionNormalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page               *PageInfo `protobuf:"bytes,1,opt,name=Page,proto3" json:"Page,omitempty"`
	RecordNo           string    `protobuf:"bytes,2,opt,name=recordNo,proto3" json:"recordNo,omitempty"`                      //汇总页记录ID
	UserId             int64     `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`                         //用户ID
	ContributionUserId int64     `protobuf:"varint,4,opt,name=contributionUserId,proto3" json:"contributionUserId,omitempty"` //查询贡献人员ID
}

func (x *AgentCommissionNormalRequest) Reset() {
	*x = AgentCommissionNormalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionNormalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionNormalRequest) ProtoMessage() {}

func (x *AgentCommissionNormalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionNormalRequest.ProtoReflect.Descriptor instead.
func (*AgentCommissionNormalRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{66}
}

func (x *AgentCommissionNormalRequest) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionNormalRequest) GetRecordNo() string {
	if x != nil {
		return x.RecordNo
	}
	return ""
}

func (x *AgentCommissionNormalRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgentCommissionNormalRequest) GetContributionUserId() int64 {
	if x != nil {
		return x.ContributionUserId
	}
	return 0
}

// 佣金信息-分销佣金信息
type AgentCommissionNormalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse               `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool                         `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Page          *PageInfo                    `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                   //分页
	Items         []*AgentCommissionNormalItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                 //数据
}

func (x *AgentCommissionNormalResponse) Reset() {
	*x = AgentCommissionNormalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionNormalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionNormalResponse) ProtoMessage() {}

func (x *AgentCommissionNormalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionNormalResponse.ProtoReflect.Descriptor instead.
func (*AgentCommissionNormalResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{67}
}

func (x *AgentCommissionNormalResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentCommissionNormalResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentCommissionNormalResponse) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentCommissionNormalResponse) GetItems() []*AgentCommissionNormalItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentCommissionNormalItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         //记录ID
	UserId         int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`                 //成员ID
	CategoryId     int32 `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`         //游戏类型ID
	Level          int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                   //代理等级
	BetAmount      int64 `protobuf:"varint,5,opt,name=betAmount,proto3" json:"betAmount,omitempty"`           //业绩
	Commission     int64 `protobuf:"varint,6,opt,name=commission,proto3" json:"commission,omitempty"`         //获得佣金
	CommissionRate int32 `protobuf:"varint,7,opt,name=CommissionRate,proto3" json:"CommissionRate,omitempty"` //返佣比率
}

func (x *AgentCommissionNormalItem) Reset() {
	*x = AgentCommissionNormalItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommissionNormalItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommissionNormalItem) ProtoMessage() {}

func (x *AgentCommissionNormalItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommissionNormalItem.ProtoReflect.Descriptor instead.
func (*AgentCommissionNormalItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{68}
}

func (x *AgentCommissionNormalItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetCommission() int64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *AgentCommissionNormalItem) GetCommissionRate() int32 {
	if x != nil {
		return x.CommissionRate
	}
	return 0
}

// 配置介绍页-代理过往业绩（昨日）请求
type AgentInfoBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户ID
}

func (x *AgentInfoBetRequest) Reset() {
	*x = AgentInfoBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoBetRequest) ProtoMessage() {}

func (x *AgentInfoBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoBetRequest.ProtoReflect.Descriptor instead.
func (*AgentInfoBetRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{69}
}

func (x *AgentInfoBetRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 配置介绍页-代理过往业绩（昨日）响应
type AgentInfoBetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse      `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool                `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Items         []*AgentInfoBetItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                 //数据(游戏大类对应业绩额)
}

func (x *AgentInfoBetResponse) Reset() {
	*x = AgentInfoBetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoBetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoBetResponse) ProtoMessage() {}

func (x *AgentInfoBetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoBetResponse.ProtoReflect.Descriptor instead.
func (*AgentInfoBetResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{70}
}

func (x *AgentInfoBetResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentInfoBetResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentInfoBetResponse) GetItems() []*AgentInfoBetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentInfoBetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int32 `protobuf:"varint,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"` //游戏类型ID
	Bet        int64 `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`               //业绩
}

func (x *AgentInfoBetItem) Reset() {
	*x = AgentInfoBetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoBetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoBetItem) ProtoMessage() {}

func (x *AgentInfoBetItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoBetItem.ProtoReflect.Descriptor instead.
func (*AgentInfoBetItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{71}
}

func (x *AgentInfoBetItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentInfoBetItem) GetBet() int64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

// 极差模式返佣配置请求
type AgentInfoConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentInfoConfigRequest) Reset() {
	*x = AgentInfoConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoConfigRequest) ProtoMessage() {}

func (x *AgentInfoConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoConfigRequest.ProtoReflect.Descriptor instead.
func (*AgentInfoConfigRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{72}
}

// 极差模式返佣配置响应
type AgentInfoConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse         `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool                   `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Items         []*AgentInfoConfigItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                 //数据
}

func (x *AgentInfoConfigResponse) Reset() {
	*x = AgentInfoConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoConfigResponse) ProtoMessage() {}

func (x *AgentInfoConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoConfigResponse.ProtoReflect.Descriptor instead.
func (*AgentInfoConfigResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{73}
}

func (x *AgentInfoConfigResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentInfoConfigResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentInfoConfigResponse) GetItems() []*AgentInfoConfigItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentInfoConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int32                   `protobuf:"varint,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"` //游戏类型ID
	List       []*AgentInfoConfigLevel `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`              //配置信息
}

func (x *AgentInfoConfigItem) Reset() {
	*x = AgentInfoConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoConfigItem) ProtoMessage() {}

func (x *AgentInfoConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoConfigItem.ProtoReflect.Descriptor instead.
func (*AgentInfoConfigItem) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{74}
}

func (x *AgentInfoConfigItem) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AgentInfoConfigItem) GetList() []*AgentInfoConfigLevel {
	if x != nil {
		return x.List
	}
	return nil
}

type AgentInfoConfigLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`              //级别名称
	StartBet   int64  `protobuf:"varint,2,opt,name=startBet,proto3" json:"startBet,omitempty"`     //最低业绩
	EndBet     int64  `protobuf:"varint,3,opt,name=endBet,proto3" json:"endBet,omitempty"`         //最大业绩
	Commission int32  `protobuf:"varint,4,opt,name=commission,proto3" json:"commission,omitempty"` //每万返佣万分比
}

func (x *AgentInfoConfigLevel) Reset() {
	*x = AgentInfoConfigLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoConfigLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoConfigLevel) ProtoMessage() {}

func (x *AgentInfoConfigLevel) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoConfigLevel.ProtoReflect.Descriptor instead.
func (*AgentInfoConfigLevel) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{75}
}

func (x *AgentInfoConfigLevel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentInfoConfigLevel) GetStartBet() int64 {
	if x != nil {
		return x.StartBet
	}
	return 0
}

func (x *AgentInfoConfigLevel) GetEndBet() int64 {
	if x != nil {
		return x.EndBet
	}
	return 0
}

func (x *AgentInfoConfigLevel) GetCommission() int32 {
	if x != nil {
		return x.Commission
	}
	return 0
}

// 用户对应返佣模式请求
type AgentModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户ID
}

func (x *AgentModeRequest) Reset() {
	*x = AgentModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentModeRequest) ProtoMessage() {}

func (x *AgentModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentModeRequest.ProtoReflect.Descriptor instead.
func (*AgentModeRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{76}
}

func (x *AgentModeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 用户对应返佣模式响应
type AgentModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	Mode          AgentModeType  `protobuf:"varint,3,opt,name=mode,proto3,enum=protocols.AgentModeType" json:"mode,omitempty"`
}

func (x *AgentModeResponse) Reset() {
	*x = AgentModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentModeResponse) ProtoMessage() {}

func (x *AgentModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentModeResponse.ProtoReflect.Descriptor instead.
func (*AgentModeResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{77}
}

func (x *AgentModeResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentModeResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentModeResponse) GetMode() AgentModeType {
	if x != nil {
		return x.Mode
	}
	return AgentModeType_AgentModeTypeDefault
}

// 用户代理模式修改通知请求
type AgentModeChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList []int64       `protobuf:"varint,1,rep,packed,name=userIdList,proto3" json:"userIdList,omitempty"`           //改变的用户ID列表
	Mode       AgentModeType `protobuf:"varint,2,opt,name=mode,proto3,enum=protocols.AgentModeType" json:"mode,omitempty"` //变更后的模式类型
}

func (x *AgentModeChangeRequest) Reset() {
	*x = AgentModeChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentModeChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentModeChangeRequest) ProtoMessage() {}

func (x *AgentModeChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentModeChangeRequest.ProtoReflect.Descriptor instead.
func (*AgentModeChangeRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{78}
}

func (x *AgentModeChangeRequest) GetUserIdList() []int64 {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *AgentModeChangeRequest) GetMode() AgentModeType {
	if x != nil {
		return x.Mode
	}
	return AgentModeType_AgentModeTypeDefault
}

// 用户代理模式修改通知响应
type AgentModeChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
}

func (x *AgentModeChangeResponse) Reset() {
	*x = AgentModeChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentModeChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentModeChangeResponse) ProtoMessage() {}

func (x *AgentModeChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentModeChangeResponse.ProtoReflect.Descriptor instead.
func (*AgentModeChangeResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{79}
}

func (x *AgentModeChangeResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentModeChangeResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

// 代理介绍页-介绍图片请求
type AgentInfoImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentInfoImageRequest) Reset() {
	*x = AgentInfoImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoImageRequest) ProtoMessage() {}

func (x *AgentInfoImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoImageRequest.ProtoReflect.Descriptor instead.
func (*AgentInfoImageRequest) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{80}
}

// 代理介绍页-介绍图片响应
type AgentInfoImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicResponse *BasicResponse `protobuf:"bytes,1,opt,name=basicResponse,proto3" json:"basicResponse,omitempty"` //基础响应
	ICanDoIt      bool           `protobuf:"varint,2,opt,name=iCanDoIt,proto3" json:"iCanDoIt,omitempty"`          //可以执行这个请求
	ImageUrl      string         `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *AgentInfoImageResponse) Reset() {
	*x = AgentInfoImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfoImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfoImageResponse) ProtoMessage() {}

func (x *AgentInfoImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfoImageResponse.ProtoReflect.Descriptor instead.
func (*AgentInfoImageResponse) Descriptor() ([]byte, []int) {
	return file_protocols_proto_rawDescGZIP(), []int{81}
}

func (x *AgentInfoImageResponse) GetBasicResponse() *BasicResponse {
	if x != nil {
		return x.BasicResponse
	}
	return nil
}

func (x *AgentInfoImageResponse) GetICanDoIt() bool {
	if x != nil {
		return x.ICanDoIt
	}
	return false
}

func (x *AgentInfoImageResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

var File_protocols_proto protoreflect.FileDescriptor

var file_protocols_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0x4e, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0xd6, 0x01,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x75, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x75, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x2f,
	0x0a, 0x15, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x74, 0x0a, 0x16, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x5f, 0x0a, 0x13, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x19, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x78, 0x0a, 0x1a, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x22, 0x68, 0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x23,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x4d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x22, 0x65, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x1a, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x22, 0x6b, 0x0a, 0x1d, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x7c,
	0x0a, 0x1e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x4d, 0x0a, 0x1d,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x7c, 0x0a, 0x1e, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0xbb, 0x02, 0x0a, 0x1d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x7c, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22,
	0x7c, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x31, 0x0a,
	0x13, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79,
	0x22, 0x72, 0x0a, 0x14, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61,
	0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x52, 0x0a, 0x1c, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x1d, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43,
	0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x77, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x58, 0x0a, 0x10, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xf8, 0x03, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x1a, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x18, 0x73, 0x74, 0x65, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x42,
	0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xaf, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f,
	0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f,
	0x49, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x16, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22,
	0xa4, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x64, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22, 0x39, 0x0a,
	0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x22,
	0x4c, 0x0a, 0x16, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x75, 0x0a,
	0x17, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x22, 0x37, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x01,
	0x0a, 0x1e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x90,
	0x01, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x88, 0x02, 0x0a, 0x1e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74,
	0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x6d, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01, 0x0a,
	0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6d, 0x42, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x65, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x94, 0x02, 0x0a, 0x1b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x27, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x66, 0x66, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x75, 0x6d, 0x42, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x54, 0x65,
	0x61, 0x6d, 0x42, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x6d,
	0x54, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x74, 0x22, 0x9b, 0x02, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x52, 0x61, 0x74, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x31, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x44, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x62, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xab, 0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6a, 0x0a,
	0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x14, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x42, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x10, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x43, 0x61, 0x6e, 0x44, 0x6f, 0x49, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a,
	0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x91, 0x01,
	0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x43, 0x61, 0x6e,
	0x44, 0x6f, 0x49, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x2a, 0x77, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x64,
	0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6f,
	0x64, 0x65, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x91, 0x03, 0x12,
	0x14, 0x0a, 0x0f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x92, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x94, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x6f, 0x64,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x93, 0x03, 0x2a, 0x57, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x10, 0x02, 0x2a, 0xf3, 0x18, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x03, 0x12, 0x22, 0x0a,
	0x1e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x63, 0x6b,
	0x4f, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x07, 0x12, 0x25, 0x0a, 0x21,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x08, 0x12, 0x38, 0x0a, 0x34, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x09, 0x12, 0x39, 0x0a,
	0x35, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0a, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0b, 0x12, 0x34, 0x0a,
	0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62,
	0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x0c, 0x12, 0x31, 0x0a, 0x2d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x0d, 0x12, 0x32, 0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0e, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0f, 0x12, 0x2c, 0x0a, 0x28, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0x10, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x11, 0x12, 0x34, 0x0a, 0x30, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x12,
	0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x13, 0x12, 0x34, 0x0a, 0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x14, 0x12, 0x33, 0x0a, 0x2f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x15,
	0x12, 0x34, 0x0a, 0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x16, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x17, 0x12, 0x34, 0x0a, 0x30, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0x18, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x19, 0x12, 0x34, 0x0a, 0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x1a, 0x12, 0x2b, 0x0a, 0x27,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x1b, 0x12, 0x2c, 0x0a, 0x28, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x1c, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x1f, 0x12, 0x34, 0x0a, 0x30,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0x20, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x21, 0x12,
	0x2c, 0x0a, 0x28, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x22, 0x12, 0x29, 0x0a,
	0x25, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x23, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0x24, 0x12, 0x29, 0x0a, 0x25, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x25, 0x12,
	0x2a, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69,
	0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x26, 0x12, 0x25, 0x0a, 0x21, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x10, 0x27, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x28, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x29, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x2a, 0x12, 0x29, 0x0a, 0x25, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x2b, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x2c,
	0x12, 0x29, 0x0a, 0x25, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x2d, 0x12, 0x2a, 0x0a, 0x26, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x2e, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x66, 0x12, 0x24,
	0x0a, 0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x67, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x62, 0x74, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x68, 0x12, 0x25, 0x0a, 0x21, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x10, 0x69, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x6a, 0x12, 0x34, 0x0a, 0x2f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xc9, 0x01,
	0x12, 0x35, 0x0a, 0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xca, 0x01, 0x12, 0x34, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xcb, 0x01, 0x12, 0x35, 0x0a,
	0x30, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0xcc, 0x01, 0x12, 0x33, 0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xcd, 0x01, 0x12, 0x34, 0x0a, 0x2f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xce, 0x01, 0x12,
	0x31, 0x0a, 0x2c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0xcf, 0x01, 0x12, 0x32, 0x0a, 0x2d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0xd0, 0x01, 0x12, 0x2a, 0x0a, 0x25, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0xd5, 0x01, 0x12, 0x2b, 0x0a, 0x26, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd6, 0x01, 0x12,
	0x2d, 0x0a, 0x28, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xd7, 0x01, 0x12, 0x2e,
	0x0a, 0x29, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd8, 0x01, 0x12, 0x27,
	0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0xd9, 0x01, 0x12, 0x28, 0x0a, 0x23, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xda,
	0x01, 0x12, 0x2c, 0x0a, 0x27, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xdb, 0x01, 0x12,
	0x2d, 0x0a, 0x28, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xdc, 0x01, 0x12, 0x33,
	0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x10, 0xdd, 0x01, 0x12, 0x34, 0x0a, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xde, 0x01, 0x2a, 0x59, 0x0a, 0x0d, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x10, 0x02, 0x2a, 0xb8, 0x01, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x73, 0x10, 0x01, 0x12, 0x1c, 0x0a,
	0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x74, 0x65, 0x70, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x03, 0x12, 0x1f,
	0x0a, 0x1b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x65, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x04, 0x32,
	0x8a, 0x0c, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x81, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x49, 0x50, 0x4c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x12, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa1, 0x04, 0x0a,
	0x0a, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1a, 0x4b, 0x69, 0x63,
	0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocols_proto_rawDescOnce sync.Once
	file_protocols_proto_rawDescData = file_protocols_proto_rawDesc
)

func file_protocols_proto_rawDescGZIP() []byte {
	file_protocols_proto_rawDescOnce.Do(func() {
		file_protocols_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_proto_rawDescData)
	})
	return file_protocols_proto_rawDescData
}

var file_protocols_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_protocols_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_protocols_proto_goTypes = []interface{}{
	(Code)(0),                                   // 0: protocols.Code
	(ServiceType)(0),                            // 1: protocols.ServiceType
	(MessageType)(0),                            // 2: protocols.MessageType
	(AgentModeType)(0),                          // 3: protocols.AgentModeType
	(AgentCommissionType)(0),                    // 4: protocols.AgentCommissionType
	(*Message)(nil),                             // 5: protocols.Message
	(*BasicResponse)(nil),                       // 6: protocols.BasicResponse
	(*ServiceRegisterRequest)(nil),              // 7: protocols.ServiceRegisterRequest
	(*ServiceRegisterResponse)(nil),             // 8: protocols.ServiceRegisterResponse
	(*AddUserRequest)(nil),                      // 9: protocols.AddUserRequest
	(*AddUserResponse)(nil),                     // 10: protocols.AddUserResponse
	(*BackendAddUserRequest)(nil),               // 11: protocols.BackendAddUserRequest
	(*BackendAddUserResponse)(nil),              // 12: protocols.BackendAddUserResponse
	(*KickOutUserRequest)(nil),                  // 13: protocols.KickOutUserRequest
	(*KickOutUserResponse)(nil),                 // 14: protocols.KickOutUserResponse
	(*MissionCheckRequest)(nil),                 // 15: protocols.MissionCheckRequest
	(*MissionCheckResponse)(nil),                // 16: protocols.MissionCheckResponse
	(*MissionPrizeNoticeRequest)(nil),           // 17: protocols.MissionPrizeNoticeRequest
	(*MissionPrizeNoticeResponse)(nil),          // 18: protocols.MissionPrizeNoticeResponse
	(*UserTodayGamePlatformReportRequest)(nil),  // 19: protocols.UserTodayGamePlatformReportRequest
	(*UserTodayGamePlatformReportResponse)(nil), // 20: protocols.UserTodayGamePlatformReportResponse
	(*UpdateUserRebateAmountDetails)(nil),       // 21: protocols.UpdateUserRebateAmountDetails
	(*UpdateUserRebateAmountRequest)(nil),       // 22: protocols.UpdateUserRebateAmountRequest
	(*UpdateUserRebateAmountResponse)(nil),      // 23: protocols.UpdateUserRebateAmountResponse
	(*UpdateUserVIPLotteryRequest)(nil),         // 24: protocols.UpdateUserVIPLotteryRequest
	(*UpdateUserVIPLotteryResponse)(nil),        // 25: protocols.UpdateUserVIPLotteryResponse
	(*UpdateGameRequest)(nil),                   // 26: protocols.UpdateGameRequest
	(*UpdateGameResponse)(nil),                  // 27: protocols.UpdateGameResponse
	(*WithdrawCommissionRequest)(nil),           // 28: protocols.WithdrawCommissionRequest
	(*WithdrawCommissionResponse)(nil),          // 29: protocols.WithdrawCommissionResponse
	(*ManualDeductEventRouteRequest)(nil),       // 30: protocols.ManualDeductEventRouteRequest
	(*ManualDeductEventRouteResponse)(nil),      // 31: protocols.ManualDeductEventRouteResponse
	(*PreferentialEventRouteRequest)(nil),       // 32: protocols.PreferentialEventRouteRequest
	(*PreferentialEventRouteResponse)(nil),      // 33: protocols.PreferentialEventRouteResponse
	(*UserRechargeEventRouteRequest)(nil),       // 34: protocols.UserRechargeEventRouteRequest
	(*UserRechargeEventRouteResponse)(nil),      // 35: protocols.UserRechargeEventRouteResponse
	(*UserWithdrawEventRouteRequest)(nil),       // 36: protocols.UserWithdrawEventRouteRequest
	(*UserWithdrawEventRouteResponse)(nil),      // 37: protocols.UserWithdrawEventRouteResponse
	(*CacheRefreshRequest)(nil),                 // 38: protocols.CacheRefreshRequest
	(*CacheRefreshResponse)(nil),                // 39: protocols.CacheRefreshResponse
	(*OfflineUserRequest)(nil),                  // 40: protocols.OfflineUserRequest
	(*OfflineUserResponse)(nil),                 // 41: protocols.OfflineUserResponse
	(*BackendRechargeNotifyRequest)(nil),        // 42: protocols.BackendRechargeNotifyRequest
	(*BackendRechargeNotifyResponse)(nil),       // 43: protocols.BackendRechargeNotifyResponse
	(*RecreateAgentTreeRequest)(nil),            // 44: protocols.RecreateAgentTreeRequest
	(*RecreateAgentTreeResponse)(nil),           // 45: protocols.RecreateAgentTreeResponse
	(*AgentMoveRequest)(nil),                    // 46: protocols.AgentMoveRequest
	(*AgentMoveResponse)(nil),                   // 47: protocols.AgentMoveResponse
	(*GetAgentReportRequest)(nil),               // 48: protocols.GetAgentReportRequest
	(*AgentReportEntry)(nil),                    // 49: protocols.AgentReportEntry
	(*GetAgentReportResponse)(nil),              // 50: protocols.GetAgentReportResponse
	(*TransferObtainRequest)(nil),               // 51: protocols.TransferObtainRequest
	(*TransferObtainResponse)(nil),              // 52: protocols.TransferObtainResponse
	(*RedpacketNotifyRequest)(nil),              // 53: protocols.RedpacketNotifyRequest
	(*RedpacketNotifyResponse)(nil),             // 54: protocols.RedpacketNotifyResponse
	(*ChannelGameEditRequest)(nil),              // 55: protocols.ChannelGameEditRequest
	(*ChannelGameEditResponse)(nil),             // 56: protocols.ChannelGameEditResponse
	(*KickOutPlatformRequest)(nil),              // 57: protocols.KickOutPlatformRequest
	(*KickOutPlatformResponse)(nil),             // 58: protocols.KickOutPlatformResponse
	(*AgentCommissionPredictRequest)(nil),       // 59: protocols.AgentCommissionPredictRequest
	(*AgentCommissionPredictResponse)(nil),      // 60: protocols.AgentCommissionPredictResponse
	(*PageInfo)(nil),                            // 61: protocols.PageInfo
	(*AgentCommissionSummaryRequest)(nil),       // 62: protocols.AgentCommissionSummaryRequest
	(*AgentCommissionSummaryResponse)(nil),      // 63: protocols.AgentCommissionSummaryResponse
	(*AgentCommissionSummaryItem)(nil),          // 64: protocols.AgentCommissionSummaryItem
	(*AgentCommissionDirectRequest)(nil),        // 65: protocols.AgentCommissionDirectRequest
	(*AgentCommissionDirectResponse)(nil),       // 66: protocols.AgentCommissionDirectResponse
	(*AgentCommissionDirectItem)(nil),           // 67: protocols.AgentCommissionDirectItem
	(*AgentCommissionDiffRequest)(nil),          // 68: protocols.AgentCommissionDiffRequest
	(*AgentCommissionDiffResponse)(nil),         // 69: protocols.AgentCommissionDiffResponse
	(*AgentCommissionDiffItem)(nil),             // 70: protocols.AgentCommissionDiffItem
	(*AgentCommissionNormalRequest)(nil),        // 71: protocols.AgentCommissionNormalRequest
	(*AgentCommissionNormalResponse)(nil),       // 72: protocols.AgentCommissionNormalResponse
	(*AgentCommissionNormalItem)(nil),           // 73: protocols.AgentCommissionNormalItem
	(*AgentInfoBetRequest)(nil),                 // 74: protocols.AgentInfoBetRequest
	(*AgentInfoBetResponse)(nil),                // 75: protocols.AgentInfoBetResponse
	(*AgentInfoBetItem)(nil),                    // 76: protocols.AgentInfoBetItem
	(*AgentInfoConfigRequest)(nil),              // 77: protocols.AgentInfoConfigRequest
	(*AgentInfoConfigResponse)(nil),             // 78: protocols.AgentInfoConfigResponse
	(*AgentInfoConfigItem)(nil),                 // 79: protocols.AgentInfoConfigItem
	(*AgentInfoConfigLevel)(nil),                // 80: protocols.AgentInfoConfigLevel
	(*AgentModeRequest)(nil),                    // 81: protocols.AgentModeRequest
	(*AgentModeResponse)(nil),                   // 82: protocols.AgentModeResponse
	(*AgentModeChangeRequest)(nil),              // 83: protocols.AgentModeChangeRequest
	(*AgentModeChangeResponse)(nil),             // 84: protocols.AgentModeChangeResponse
	(*AgentInfoImageRequest)(nil),               // 85: protocols.AgentInfoImageRequest
	(*AgentInfoImageResponse)(nil),              // 86: protocols.AgentInfoImageResponse
}
var file_protocols_proto_depIdxs = []int32{
	2,  // 0: protocols.Message.messageType:type_name -> protocols.MessageType
	0,  // 1: protocols.BasicResponse.code:type_name -> protocols.Code
	1,  // 2: protocols.ServiceRegisterRequest.serviceType:type_name -> protocols.ServiceType
	6,  // 3: protocols.ServiceRegisterResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 4: protocols.AddUserResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 5: protocols.BackendAddUserResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 6: protocols.KickOutUserResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 7: protocols.MissionCheckResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 8: protocols.MissionPrizeNoticeResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 9: protocols.UserTodayGamePlatformReportResponse.basicResponse:type_name -> protocols.BasicResponse
	21, // 10: protocols.UpdateUserRebateAmountRequest.list:type_name -> protocols.UpdateUserRebateAmountDetails
	6,  // 11: protocols.UpdateUserRebateAmountResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 12: protocols.UpdateUserVIPLotteryResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 13: protocols.UpdateGameResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 14: protocols.WithdrawCommissionResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 15: protocols.ManualDeductEventRouteResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 16: protocols.PreferentialEventRouteResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 17: protocols.UserRechargeEventRouteResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 18: protocols.UserWithdrawEventRouteResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 19: protocols.CacheRefreshResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 20: protocols.OfflineUserResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 21: protocols.BackendRechargeNotifyResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 22: protocols.RecreateAgentTreeResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 23: protocols.AgentMoveResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 24: protocols.GetAgentReportResponse.basicResponse:type_name -> protocols.BasicResponse
	49, // 25: protocols.GetAgentReportResponse.entryList:type_name -> protocols.AgentReportEntry
	6,  // 26: protocols.TransferObtainResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 27: protocols.RedpacketNotifyResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 28: protocols.ChannelGameEditResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 29: protocols.KickOutPlatformResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 30: protocols.AgentCommissionPredictResponse.basicResponse:type_name -> protocols.BasicResponse
	61, // 31: protocols.AgentCommissionSummaryRequest.page:type_name -> protocols.PageInfo
	6,  // 32: protocols.AgentCommissionSummaryResponse.basicResponse:type_name -> protocols.BasicResponse
	61, // 33: protocols.AgentCommissionSummaryResponse.page:type_name -> protocols.PageInfo
	64, // 34: protocols.AgentCommissionSummaryResponse.items:type_name -> protocols.AgentCommissionSummaryItem
	61, // 35: protocols.AgentCommissionDirectRequest.page:type_name -> protocols.PageInfo
	6,  // 36: protocols.AgentCommissionDirectResponse.basicResponse:type_name -> protocols.BasicResponse
	61, // 37: protocols.AgentCommissionDirectResponse.page:type_name -> protocols.PageInfo
	67, // 38: protocols.AgentCommissionDirectResponse.items:type_name -> protocols.AgentCommissionDirectItem
	61, // 39: protocols.AgentCommissionDiffRequest.page:type_name -> protocols.PageInfo
	6,  // 40: protocols.AgentCommissionDiffResponse.basicResponse:type_name -> protocols.BasicResponse
	61, // 41: protocols.AgentCommissionDiffResponse.page:type_name -> protocols.PageInfo
	70, // 42: protocols.AgentCommissionDiffResponse.items:type_name -> protocols.AgentCommissionDiffItem
	61, // 43: protocols.AgentCommissionNormalRequest.Page:type_name -> protocols.PageInfo
	6,  // 44: protocols.AgentCommissionNormalResponse.basicResponse:type_name -> protocols.BasicResponse
	61, // 45: protocols.AgentCommissionNormalResponse.page:type_name -> protocols.PageInfo
	73, // 46: protocols.AgentCommissionNormalResponse.items:type_name -> protocols.AgentCommissionNormalItem
	6,  // 47: protocols.AgentInfoBetResponse.basicResponse:type_name -> protocols.BasicResponse
	76, // 48: protocols.AgentInfoBetResponse.items:type_name -> protocols.AgentInfoBetItem
	6,  // 49: protocols.AgentInfoConfigResponse.basicResponse:type_name -> protocols.BasicResponse
	79, // 50: protocols.AgentInfoConfigResponse.items:type_name -> protocols.AgentInfoConfigItem
	80, // 51: protocols.AgentInfoConfigItem.list:type_name -> protocols.AgentInfoConfigLevel
	6,  // 52: protocols.AgentModeResponse.basicResponse:type_name -> protocols.BasicResponse
	3,  // 53: protocols.AgentModeResponse.mode:type_name -> protocols.AgentModeType
	3,  // 54: protocols.AgentModeChangeRequest.mode:type_name -> protocols.AgentModeType
	6,  // 55: protocols.AgentModeChangeResponse.basicResponse:type_name -> protocols.BasicResponse
	6,  // 56: protocols.AgentInfoImageResponse.basicResponse:type_name -> protocols.BasicResponse
	7,  // 57: protocols.AdminBackendRPCService.ServiceRegister:input_type -> protocols.ServiceRegisterRequest
	11, // 58: protocols.AdminBackendRPCService.AddUserService:input_type -> protocols.BackendAddUserRequest
	19, // 59: protocols.AdminBackendRPCService.GetUserTodayGamePlatformReport:input_type -> protocols.UserTodayGamePlatformReportRequest
	22, // 60: protocols.AdminBackendRPCService.UpdateUserRebateAmount:input_type -> protocols.UpdateUserRebateAmountRequest
	24, // 61: protocols.AdminBackendRPCService.UpdateUserVIPLottery:input_type -> protocols.UpdateUserVIPLotteryRequest
	28, // 62: protocols.AdminBackendRPCService.WithdrawCommission:input_type -> protocols.WithdrawCommissionRequest
	59, // 63: protocols.AdminBackendRPCService.AgentCommissionPredict:input_type -> protocols.AgentCommissionPredictRequest
	62, // 64: protocols.AdminBackendRPCService.AgentCommissionSummary:input_type -> protocols.AgentCommissionSummaryRequest
	65, // 65: protocols.AdminBackendRPCService.AgentCommissionDirect:input_type -> protocols.AgentCommissionDirectRequest
	68, // 66: protocols.AdminBackendRPCService.AgentCommissionDiff:input_type -> protocols.AgentCommissionDiffRequest
	71, // 67: protocols.AdminBackendRPCService.AgentCommissionNormal:input_type -> protocols.AgentCommissionNormalRequest
	74, // 68: protocols.AdminBackendRPCService.AgentInfoBet:input_type -> protocols.AgentInfoBetRequest
	77, // 69: protocols.AdminBackendRPCService.AgentInfoConfig:input_type -> protocols.AgentInfoConfigRequest
	81, // 70: protocols.AdminBackendRPCService.AgentMode:input_type -> protocols.AgentModeRequest
	85, // 71: protocols.AdminBackendRPCService.AgentInfoImage:input_type -> protocols.AgentInfoImageRequest
	7,  // 72: protocols.RPCService.ServiceRegister:input_type -> protocols.ServiceRegisterRequest
	9,  // 73: protocols.RPCService.AddUserService:input_type -> protocols.AddUserRequest
	13, // 74: protocols.RPCService.KickOutUserService:input_type -> protocols.KickOutUserRequest
	57, // 75: protocols.RPCService.KickOutPlatformUserService:input_type -> protocols.KickOutPlatformRequest
	26, // 76: protocols.RPCService.UpdateGameService:input_type -> protocols.UpdateGameRequest
	83, // 77: protocols.RPCService.AgentModeChange:input_type -> protocols.AgentModeChangeRequest
	8,  // 78: protocols.AdminBackendRPCService.ServiceRegister:output_type -> protocols.ServiceRegisterResponse
	12, // 79: protocols.AdminBackendRPCService.AddUserService:output_type -> protocols.BackendAddUserResponse
	20, // 80: protocols.AdminBackendRPCService.GetUserTodayGamePlatformReport:output_type -> protocols.UserTodayGamePlatformReportResponse
	23, // 81: protocols.AdminBackendRPCService.UpdateUserRebateAmount:output_type -> protocols.UpdateUserRebateAmountResponse
	25, // 82: protocols.AdminBackendRPCService.UpdateUserVIPLottery:output_type -> protocols.UpdateUserVIPLotteryResponse
	29, // 83: protocols.AdminBackendRPCService.WithdrawCommission:output_type -> protocols.WithdrawCommissionResponse
	60, // 84: protocols.AdminBackendRPCService.AgentCommissionPredict:output_type -> protocols.AgentCommissionPredictResponse
	63, // 85: protocols.AdminBackendRPCService.AgentCommissionSummary:output_type -> protocols.AgentCommissionSummaryResponse
	66, // 86: protocols.AdminBackendRPCService.AgentCommissionDirect:output_type -> protocols.AgentCommissionDirectResponse
	69, // 87: protocols.AdminBackendRPCService.AgentCommissionDiff:output_type -> protocols.AgentCommissionDiffResponse
	72, // 88: protocols.AdminBackendRPCService.AgentCommissionNormal:output_type -> protocols.AgentCommissionNormalResponse
	75, // 89: protocols.AdminBackendRPCService.AgentInfoBet:output_type -> protocols.AgentInfoBetResponse
	78, // 90: protocols.AdminBackendRPCService.AgentInfoConfig:output_type -> protocols.AgentInfoConfigResponse
	82, // 91: protocols.AdminBackendRPCService.AgentMode:output_type -> protocols.AgentModeResponse
	86, // 92: protocols.AdminBackendRPCService.AgentInfoImage:output_type -> protocols.AgentInfoImageResponse
	8,  // 93: protocols.RPCService.ServiceRegister:output_type -> protocols.ServiceRegisterResponse
	10, // 94: protocols.RPCService.AddUserService:output_type -> protocols.AddUserResponse
	14, // 95: protocols.RPCService.KickOutUserService:output_type -> protocols.KickOutUserResponse
	58, // 96: protocols.RPCService.KickOutPlatformUserService:output_type -> protocols.KickOutPlatformResponse
	27, // 97: protocols.RPCService.UpdateGameService:output_type -> protocols.UpdateGameResponse
	84, // 98: protocols.RPCService.AgentModeChange:output_type -> protocols.AgentModeChangeResponse
	78, // [78:99] is the sub-list for method output_type
	57, // [57:78] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_protocols_proto_init() }
func file_protocols_proto_init() {
	if File_protocols_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendAddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendAddUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionPrizeNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionPrizeNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTodayGamePlatformReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTodayGamePlatformReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRebateAmountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRebateAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRebateAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserVIPLotteryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserVIPLotteryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualDeductEventRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualDeductEventRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferentialEventRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferentialEventRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRechargeEventRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRechargeEventRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdrawEventRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdrawEventRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheRefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendRechargeNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendRechargeNotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecreateAgentTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecreateAgentTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentReportEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferObtainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferObtainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedpacketNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedpacketNotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelGameEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelGameEditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutPlatformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutPlatformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionPredictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionPredictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionSummaryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDirectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDirectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDirectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDiffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDiffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionDiffItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionNormalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionNormalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommissionNormalItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoBetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoBetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoConfigLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentModeChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentModeChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfoImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protocols_proto_goTypes,
		DependencyIndexes: file_protocols_proto_depIdxs,
		EnumInfos:         file_protocols_proto_enumTypes,
		MessageInfos:      file_protocols_proto_msgTypes,
	}.Build()
	File_protocols_proto = out.File
	file_protocols_proto_rawDesc = nil
	file_protocols_proto_goTypes = nil
	file_protocols_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminBackendRPCServiceClient is the client API for AdminBackendRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminBackendRPCServiceClient interface {
	// 服务注册
	ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error)
	// 添加用户服务
	AddUserService(ctx context.Context, in *BackendAddUserRequest, opts ...grpc.CallOption) (*BackendAddUserResponse, error)
	// 获取当日游戏平台报表数据
	GetUserTodayGamePlatformReport(ctx context.Context, in *UserTodayGamePlatformReportRequest, opts ...grpc.CallOption) (*UserTodayGamePlatformReportResponse, error)
	// 更新用户洗码金额
	UpdateUserRebateAmount(ctx context.Context, in *UpdateUserRebateAmountRequest, opts ...grpc.CallOption) (*UpdateUserRebateAmountResponse, error)
	// 更新用户VIP礼金
	UpdateUserVIPLottery(ctx context.Context, in *UpdateUserVIPLotteryRequest, opts ...grpc.CallOption) (*UpdateUserVIPLotteryResponse, error)
	// 提取佣金请求
	WithdrawCommission(ctx context.Context, in *WithdrawCommissionRequest, opts ...grpc.CallOption) (*WithdrawCommissionResponse, error)
	// 今日佣金预估
	AgentCommissionPredict(ctx context.Context, in *AgentCommissionPredictRequest, opts ...grpc.CallOption) (*AgentCommissionPredictResponse, error)
	// 佣金信息-汇总页
	AgentCommissionSummary(ctx context.Context, in *AgentCommissionSummaryRequest, opts ...grpc.CallOption) (*AgentCommissionSummaryResponse, error)
	// 佣金信息-直推详情
	AgentCommissionDirect(ctx context.Context, in *AgentCommissionDirectRequest, opts ...grpc.CallOption) (*AgentCommissionDirectResponse, error)
	// 佣金信息-极差直推信息
	AgentCommissionDiff(ctx context.Context, in *AgentCommissionDiffRequest, opts ...grpc.CallOption) (*AgentCommissionDiffResponse, error)
	// 佣金信息-分销佣金详情
	AgentCommissionNormal(ctx context.Context, in *AgentCommissionNormalRequest, opts ...grpc.CallOption) (*AgentCommissionNormalResponse, error)
	// 配置介绍页-代理过往业绩
	AgentInfoBet(ctx context.Context, in *AgentInfoBetRequest, opts ...grpc.CallOption) (*AgentInfoBetResponse, error)
	// 极差模式返佣配置
	AgentInfoConfig(ctx context.Context, in *AgentInfoConfigRequest, opts ...grpc.CallOption) (*AgentInfoConfigResponse, error)
	// 返佣模式查询
	AgentMode(ctx context.Context, in *AgentModeRequest, opts ...grpc.CallOption) (*AgentModeResponse, error)
	// 配置介绍页-介绍图片
	AgentInfoImage(ctx context.Context, in *AgentInfoImageRequest, opts ...grpc.CallOption) (*AgentInfoImageResponse, error)
}

type adminBackendRPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminBackendRPCServiceClient(cc grpc.ClientConnInterface) AdminBackendRPCServiceClient {
	return &adminBackendRPCServiceClient{cc}
}

func (c *adminBackendRPCServiceClient) ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error) {
	out := new(ServiceRegisterResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/ServiceRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AddUserService(ctx context.Context, in *BackendAddUserRequest, opts ...grpc.CallOption) (*BackendAddUserResponse, error) {
	out := new(BackendAddUserResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AddUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) GetUserTodayGamePlatformReport(ctx context.Context, in *UserTodayGamePlatformReportRequest, opts ...grpc.CallOption) (*UserTodayGamePlatformReportResponse, error) {
	out := new(UserTodayGamePlatformReportResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/GetUserTodayGamePlatformReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) UpdateUserRebateAmount(ctx context.Context, in *UpdateUserRebateAmountRequest, opts ...grpc.CallOption) (*UpdateUserRebateAmountResponse, error) {
	out := new(UpdateUserRebateAmountResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/UpdateUserRebateAmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) UpdateUserVIPLottery(ctx context.Context, in *UpdateUserVIPLotteryRequest, opts ...grpc.CallOption) (*UpdateUserVIPLotteryResponse, error) {
	out := new(UpdateUserVIPLotteryResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/UpdateUserVIPLottery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) WithdrawCommission(ctx context.Context, in *WithdrawCommissionRequest, opts ...grpc.CallOption) (*WithdrawCommissionResponse, error) {
	out := new(WithdrawCommissionResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/WithdrawCommission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentCommissionPredict(ctx context.Context, in *AgentCommissionPredictRequest, opts ...grpc.CallOption) (*AgentCommissionPredictResponse, error) {
	out := new(AgentCommissionPredictResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentCommissionPredict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentCommissionSummary(ctx context.Context, in *AgentCommissionSummaryRequest, opts ...grpc.CallOption) (*AgentCommissionSummaryResponse, error) {
	out := new(AgentCommissionSummaryResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentCommissionSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentCommissionDirect(ctx context.Context, in *AgentCommissionDirectRequest, opts ...grpc.CallOption) (*AgentCommissionDirectResponse, error) {
	out := new(AgentCommissionDirectResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentCommissionDirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentCommissionDiff(ctx context.Context, in *AgentCommissionDiffRequest, opts ...grpc.CallOption) (*AgentCommissionDiffResponse, error) {
	out := new(AgentCommissionDiffResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentCommissionDiff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentCommissionNormal(ctx context.Context, in *AgentCommissionNormalRequest, opts ...grpc.CallOption) (*AgentCommissionNormalResponse, error) {
	out := new(AgentCommissionNormalResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentCommissionNormal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentInfoBet(ctx context.Context, in *AgentInfoBetRequest, opts ...grpc.CallOption) (*AgentInfoBetResponse, error) {
	out := new(AgentInfoBetResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentInfoBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentInfoConfig(ctx context.Context, in *AgentInfoConfigRequest, opts ...grpc.CallOption) (*AgentInfoConfigResponse, error) {
	out := new(AgentInfoConfigResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentInfoConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentMode(ctx context.Context, in *AgentModeRequest, opts ...grpc.CallOption) (*AgentModeResponse, error) {
	out := new(AgentModeResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminBackendRPCServiceClient) AgentInfoImage(ctx context.Context, in *AgentInfoImageRequest, opts ...grpc.CallOption) (*AgentInfoImageResponse, error) {
	out := new(AgentInfoImageResponse)
	err := c.cc.Invoke(ctx, "/protocols.AdminBackendRPCService/AgentInfoImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminBackendRPCServiceServer is the server API for AdminBackendRPCService service.
type AdminBackendRPCServiceServer interface {
	// 服务注册
	ServiceRegister(context.Context, *ServiceRegisterRequest) (*ServiceRegisterResponse, error)
	// 添加用户服务
	AddUserService(context.Context, *BackendAddUserRequest) (*BackendAddUserResponse, error)
	// 获取当日游戏平台报表数据
	GetUserTodayGamePlatformReport(context.Context, *UserTodayGamePlatformReportRequest) (*UserTodayGamePlatformReportResponse, error)
	// 更新用户洗码金额
	UpdateUserRebateAmount(context.Context, *UpdateUserRebateAmountRequest) (*UpdateUserRebateAmountResponse, error)
	// 更新用户VIP礼金
	UpdateUserVIPLottery(context.Context, *UpdateUserVIPLotteryRequest) (*UpdateUserVIPLotteryResponse, error)
	// 提取佣金请求
	WithdrawCommission(context.Context, *WithdrawCommissionRequest) (*WithdrawCommissionResponse, error)
	// 今日佣金预估
	AgentCommissionPredict(context.Context, *AgentCommissionPredictRequest) (*AgentCommissionPredictResponse, error)
	// 佣金信息-汇总页
	AgentCommissionSummary(context.Context, *AgentCommissionSummaryRequest) (*AgentCommissionSummaryResponse, error)
	// 佣金信息-直推详情
	AgentCommissionDirect(context.Context, *AgentCommissionDirectRequest) (*AgentCommissionDirectResponse, error)
	// 佣金信息-极差直推信息
	AgentCommissionDiff(context.Context, *AgentCommissionDiffRequest) (*AgentCommissionDiffResponse, error)
	// 佣金信息-分销佣金详情
	AgentCommissionNormal(context.Context, *AgentCommissionNormalRequest) (*AgentCommissionNormalResponse, error)
	// 配置介绍页-代理过往业绩
	AgentInfoBet(context.Context, *AgentInfoBetRequest) (*AgentInfoBetResponse, error)
	// 极差模式返佣配置
	AgentInfoConfig(context.Context, *AgentInfoConfigRequest) (*AgentInfoConfigResponse, error)
	// 返佣模式查询
	AgentMode(context.Context, *AgentModeRequest) (*AgentModeResponse, error)
	// 配置介绍页-介绍图片
	AgentInfoImage(context.Context, *AgentInfoImageRequest) (*AgentInfoImageResponse, error)
}

// UnimplementedAdminBackendRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminBackendRPCServiceServer struct {
}

func (*UnimplementedAdminBackendRPCServiceServer) ServiceRegister(context.Context, *ServiceRegisterRequest) (*ServiceRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceRegister not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AddUserService(context.Context, *BackendAddUserRequest) (*BackendAddUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserService not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) GetUserTodayGamePlatformReport(context.Context, *UserTodayGamePlatformReportRequest) (*UserTodayGamePlatformReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTodayGamePlatformReport not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) UpdateUserRebateAmount(context.Context, *UpdateUserRebateAmountRequest) (*UpdateUserRebateAmountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserRebateAmount not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) UpdateUserVIPLottery(context.Context, *UpdateUserVIPLotteryRequest) (*UpdateUserVIPLotteryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserVIPLottery not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) WithdrawCommission(context.Context, *WithdrawCommissionRequest) (*WithdrawCommissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawCommission not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentCommissionPredict(context.Context, *AgentCommissionPredictRequest) (*AgentCommissionPredictResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentCommissionPredict not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentCommissionSummary(context.Context, *AgentCommissionSummaryRequest) (*AgentCommissionSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentCommissionSummary not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentCommissionDirect(context.Context, *AgentCommissionDirectRequest) (*AgentCommissionDirectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentCommissionDirect not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentCommissionDiff(context.Context, *AgentCommissionDiffRequest) (*AgentCommissionDiffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentCommissionDiff not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentCommissionNormal(context.Context, *AgentCommissionNormalRequest) (*AgentCommissionNormalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentCommissionNormal not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentInfoBet(context.Context, *AgentInfoBetRequest) (*AgentInfoBetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentInfoBet not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentInfoConfig(context.Context, *AgentInfoConfigRequest) (*AgentInfoConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentInfoConfig not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentMode(context.Context, *AgentModeRequest) (*AgentModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentMode not implemented")
}
func (*UnimplementedAdminBackendRPCServiceServer) AgentInfoImage(context.Context, *AgentInfoImageRequest) (*AgentInfoImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentInfoImage not implemented")
}

func RegisterAdminBackendRPCServiceServer(s *grpc.Server, srv AdminBackendRPCServiceServer) {
	s.RegisterService(&_AdminBackendRPCService_serviceDesc, srv)
}

func _AdminBackendRPCService_ServiceRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).ServiceRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/ServiceRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).ServiceRegister(ctx, req.(*ServiceRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AddUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackendAddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AddUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AddUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AddUserService(ctx, req.(*BackendAddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_GetUserTodayGamePlatformReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserTodayGamePlatformReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).GetUserTodayGamePlatformReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/GetUserTodayGamePlatformReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).GetUserTodayGamePlatformReport(ctx, req.(*UserTodayGamePlatformReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_UpdateUserRebateAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRebateAmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).UpdateUserRebateAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/UpdateUserRebateAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).UpdateUserRebateAmount(ctx, req.(*UpdateUserRebateAmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_UpdateUserVIPLottery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserVIPLotteryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).UpdateUserVIPLottery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/UpdateUserVIPLottery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).UpdateUserVIPLottery(ctx, req.(*UpdateUserVIPLotteryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_WithdrawCommission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawCommissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).WithdrawCommission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/WithdrawCommission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).WithdrawCommission(ctx, req.(*WithdrawCommissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentCommissionPredict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentCommissionPredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionPredict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentCommissionPredict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionPredict(ctx, req.(*AgentCommissionPredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentCommissionSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentCommissionSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentCommissionSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionSummary(ctx, req.(*AgentCommissionSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentCommissionDirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentCommissionDirectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionDirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentCommissionDirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionDirect(ctx, req.(*AgentCommissionDirectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentCommissionDiff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentCommissionDiffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionDiff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentCommissionDiff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionDiff(ctx, req.(*AgentCommissionDiffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentCommissionNormal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentCommissionNormalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionNormal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentCommissionNormal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentCommissionNormal(ctx, req.(*AgentCommissionNormalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentInfoBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentInfoBetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentInfoBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentInfoBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentInfoBet(ctx, req.(*AgentInfoBetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentInfoConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentInfoConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentInfoConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentInfoConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentInfoConfig(ctx, req.(*AgentInfoConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentMode(ctx, req.(*AgentModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminBackendRPCService_AgentInfoImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentInfoImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminBackendRPCServiceServer).AgentInfoImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.AdminBackendRPCService/AgentInfoImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminBackendRPCServiceServer).AgentInfoImage(ctx, req.(*AgentInfoImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminBackendRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocols.AdminBackendRPCService",
	HandlerType: (*AdminBackendRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceRegister",
			Handler:    _AdminBackendRPCService_ServiceRegister_Handler,
		},
		{
			MethodName: "AddUserService",
			Handler:    _AdminBackendRPCService_AddUserService_Handler,
		},
		{
			MethodName: "GetUserTodayGamePlatformReport",
			Handler:    _AdminBackendRPCService_GetUserTodayGamePlatformReport_Handler,
		},
		{
			MethodName: "UpdateUserRebateAmount",
			Handler:    _AdminBackendRPCService_UpdateUserRebateAmount_Handler,
		},
		{
			MethodName: "UpdateUserVIPLottery",
			Handler:    _AdminBackendRPCService_UpdateUserVIPLottery_Handler,
		},
		{
			MethodName: "WithdrawCommission",
			Handler:    _AdminBackendRPCService_WithdrawCommission_Handler,
		},
		{
			MethodName: "AgentCommissionPredict",
			Handler:    _AdminBackendRPCService_AgentCommissionPredict_Handler,
		},
		{
			MethodName: "AgentCommissionSummary",
			Handler:    _AdminBackendRPCService_AgentCommissionSummary_Handler,
		},
		{
			MethodName: "AgentCommissionDirect",
			Handler:    _AdminBackendRPCService_AgentCommissionDirect_Handler,
		},
		{
			MethodName: "AgentCommissionDiff",
			Handler:    _AdminBackendRPCService_AgentCommissionDiff_Handler,
		},
		{
			MethodName: "AgentCommissionNormal",
			Handler:    _AdminBackendRPCService_AgentCommissionNormal_Handler,
		},
		{
			MethodName: "AgentInfoBet",
			Handler:    _AdminBackendRPCService_AgentInfoBet_Handler,
		},
		{
			MethodName: "AgentInfoConfig",
			Handler:    _AdminBackendRPCService_AgentInfoConfig_Handler,
		},
		{
			MethodName: "AgentMode",
			Handler:    _AdminBackendRPCService_AgentMode_Handler,
		},
		{
			MethodName: "AgentInfoImage",
			Handler:    _AdminBackendRPCService_AgentInfoImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocols.proto",
}

// RPCServiceClient is the client API for RPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCServiceClient interface {
	// 服务注册
	ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error)
	// 添加用户
	AddUserService(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error)
	// 踢用户下线
	KickOutUserService(ctx context.Context, in *KickOutUserRequest, opts ...grpc.CallOption) (*KickOutUserResponse, error)
	// 踢线下分
	KickOutPlatformUserService(ctx context.Context, in *KickOutPlatformRequest, opts ...grpc.CallOption) (*KickOutPlatformResponse, error)
	// 更新游戏状态
	UpdateGameService(ctx context.Context, in *UpdateGameRequest, opts ...grpc.CallOption) (*UpdateGameResponse, error)
	// 用户代理模式改变通知
	AgentModeChange(ctx context.Context, in *AgentModeChangeRequest, opts ...grpc.CallOption) (*AgentModeChangeResponse, error)
}

type rPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRPCServiceClient(cc grpc.ClientConnInterface) RPCServiceClient {
	return &rPCServiceClient{cc}
}

func (c *rPCServiceClient) ServiceRegister(ctx context.Context, in *ServiceRegisterRequest, opts ...grpc.CallOption) (*ServiceRegisterResponse, error) {
	out := new(ServiceRegisterResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/ServiceRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) AddUserService(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error) {
	out := new(AddUserResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/AddUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) KickOutUserService(ctx context.Context, in *KickOutUserRequest, opts ...grpc.CallOption) (*KickOutUserResponse, error) {
	out := new(KickOutUserResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/KickOutUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) KickOutPlatformUserService(ctx context.Context, in *KickOutPlatformRequest, opts ...grpc.CallOption) (*KickOutPlatformResponse, error) {
	out := new(KickOutPlatformResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/KickOutPlatformUserService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) UpdateGameService(ctx context.Context, in *UpdateGameRequest, opts ...grpc.CallOption) (*UpdateGameResponse, error) {
	out := new(UpdateGameResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/UpdateGameService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) AgentModeChange(ctx context.Context, in *AgentModeChangeRequest, opts ...grpc.CallOption) (*AgentModeChangeResponse, error) {
	out := new(AgentModeChangeResponse)
	err := c.cc.Invoke(ctx, "/protocols.RPCService/AgentModeChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServiceServer is the server API for RPCService service.
type RPCServiceServer interface {
	// 服务注册
	ServiceRegister(context.Context, *ServiceRegisterRequest) (*ServiceRegisterResponse, error)
	// 添加用户
	AddUserService(context.Context, *AddUserRequest) (*AddUserResponse, error)
	// 踢用户下线
	KickOutUserService(context.Context, *KickOutUserRequest) (*KickOutUserResponse, error)
	// 踢线下分
	KickOutPlatformUserService(context.Context, *KickOutPlatformRequest) (*KickOutPlatformResponse, error)
	// 更新游戏状态
	UpdateGameService(context.Context, *UpdateGameRequest) (*UpdateGameResponse, error)
	// 用户代理模式改变通知
	AgentModeChange(context.Context, *AgentModeChangeRequest) (*AgentModeChangeResponse, error)
}

// UnimplementedRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServiceServer struct {
}

func (*UnimplementedRPCServiceServer) ServiceRegister(context.Context, *ServiceRegisterRequest) (*ServiceRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceRegister not implemented")
}
func (*UnimplementedRPCServiceServer) AddUserService(context.Context, *AddUserRequest) (*AddUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserService not implemented")
}
func (*UnimplementedRPCServiceServer) KickOutUserService(context.Context, *KickOutUserRequest) (*KickOutUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickOutUserService not implemented")
}
func (*UnimplementedRPCServiceServer) KickOutPlatformUserService(context.Context, *KickOutPlatformRequest) (*KickOutPlatformResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickOutPlatformUserService not implemented")
}
func (*UnimplementedRPCServiceServer) UpdateGameService(context.Context, *UpdateGameRequest) (*UpdateGameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGameService not implemented")
}
func (*UnimplementedRPCServiceServer) AgentModeChange(context.Context, *AgentModeChangeRequest) (*AgentModeChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentModeChange not implemented")
}

func RegisterRPCServiceServer(s *grpc.Server, srv RPCServiceServer) {
	s.RegisterService(&_RPCService_serviceDesc, srv)
}

func _RPCService_ServiceRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).ServiceRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/ServiceRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).ServiceRegister(ctx, req.(*ServiceRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_AddUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).AddUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/AddUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).AddUserService(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_KickOutUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickOutUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).KickOutUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/KickOutUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).KickOutUserService(ctx, req.(*KickOutUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_KickOutPlatformUserService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickOutPlatformRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).KickOutPlatformUserService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/KickOutPlatformUserService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).KickOutPlatformUserService(ctx, req.(*KickOutPlatformRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_UpdateGameService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).UpdateGameService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/UpdateGameService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).UpdateGameService(ctx, req.(*UpdateGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_AgentModeChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentModeChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).AgentModeChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocols.RPCService/AgentModeChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).AgentModeChange(ctx, req.(*AgentModeChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocols.RPCService",
	HandlerType: (*RPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceRegister",
			Handler:    _RPCService_ServiceRegister_Handler,
		},
		{
			MethodName: "AddUserService",
			Handler:    _RPCService_AddUserService_Handler,
		},
		{
			MethodName: "KickOutUserService",
			Handler:    _RPCService_KickOutUserService_Handler,
		},
		{
			MethodName: "KickOutPlatformUserService",
			Handler:    _RPCService_KickOutPlatformUserService_Handler,
		},
		{
			MethodName: "UpdateGameService",
			Handler:    _RPCService_UpdateGameService_Handler,
		},
		{
			MethodName: "AgentModeChange",
			Handler:    _RPCService_AgentModeChange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocols.proto",
}
