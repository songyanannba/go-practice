// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: common.proto

package pbs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用code
type Code int32

const (
	Code_Unknown                 Code = 0   //未知
	Code_Ok                      Code = 1   //成功
	Code_TokenInvalid            Code = 401 //token失效
	Code_ParameterError          Code = 402 //参数错误
	Code_Exists                  Code = 403 //已存在
	Code_NotExists               Code = 404 //不存在
	Code_SystemError             Code = 405 //系统错误
	Code_DbError                 Code = 406 //数据库错误
	Code_StatusError             Code = 407 //状态错误
	Code_AmountInsufficientError Code = 408 //余额不足
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:   "Unknown",
		1:   "Ok",
		401: "TokenInvalid",
		402: "ParameterError",
		403: "Exists",
		404: "NotExists",
		405: "SystemError",
		406: "DbError",
		407: "StatusError",
		408: "AmountInsufficientError",
	}
	Code_value = map[string]int32{
		"Unknown":                 0,
		"Ok":                      1,
		"TokenInvalid":            401,
		"ParameterError":          402,
		"Exists":                  403,
		"NotExists":               404,
		"SystemError":             405,
		"DbError":                 406,
		"StatusError":             407,
		"AmountInsufficientError": 408,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

// 埋点类型
type TrackingType int32

const (
	TrackingType_login                 TrackingType = 0 //登录
	TrackingType_login_success         TrackingType = 1 //登录成功
	TrackingType_load_resources        TrackingType = 3 //加载资源
	TrackingType_load_resources_finish TrackingType = 4 //加载资源成功
)

// Enum value maps for TrackingType.
var (
	TrackingType_name = map[int32]string{
		0: "login",
		1: "login_success",
		3: "load_resources",
		4: "load_resources_finish",
	}
	TrackingType_value = map[string]int32{
		"login":                 0,
		"login_success":         1,
		"load_resources":        3,
		"load_resources_finish": 4,
	}
)

func (x TrackingType) Enum() *TrackingType {
	p := new(TrackingType)
	*p = x
	return p
}

func (x TrackingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrackingType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (TrackingType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x TrackingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrackingType.Descriptor instead.
func (TrackingType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

// ------------------- 公共头部(无消息ID) -------------------
type ReqHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`          //唯一码
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`       //token信息，可留空
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"` //平台名称
	Demo     bool   `protobuf:"varint,4,opt,name=demo,proto3" json:"demo,omitempty"`        //是否为试玩
}

func (x *ReqHead) Reset() {
	*x = ReqHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHead) ProtoMessage() {}

func (x *ReqHead) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHead.ProtoReflect.Descriptor instead.
func (*ReqHead) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *ReqHead) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqHead) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqHead) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ReqHead) GetDemo() bool {
	if x != nil {
		return x.Demo
	}
	return false
}

type AckHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                      //唯一码
	Code    Code   `protobuf:"varint,2,opt,name=code,proto3,enum=idaproto.Code" json:"code,omitempty"` //状态码
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`               //消息
}

func (x *AckHead) Reset() {
	*x = AckHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckHead) ProtoMessage() {}

func (x *AckHead) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckHead.ProtoReflect.Descriptor instead.
func (*AckHead) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *AckHead) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AckHead) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Unknown
}

func (x *AckHead) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Recharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head   *ReqHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`      //公共头部
	Amount int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` //充值金额
	Type   int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`     //支付类型
}

func (x *Recharge) Reset() {
	*x = Recharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recharge) ProtoMessage() {}

func (x *Recharge) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recharge.ProtoReflect.Descriptor instead.
func (*Recharge) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Recharge) GetHead() *ReqHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Recharge) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Recharge) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RechargeAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head   *AckHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`      //公共头部
	Amount int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` //余额
}

func (x *RechargeAck) Reset() {
	*x = RechargeAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeAck) ProtoMessage() {}

func (x *RechargeAck) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeAck.ProtoReflect.Descriptor instead.
func (*RechargeAck) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *RechargeAck) GetHead() *AckHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *RechargeAck) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *ReqHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"` //公共头部
}

func (x *Amount) Reset() {
	*x = Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Amount) GetHead() *ReqHead {
	if x != nil {
		return x.Head
	}
	return nil
}

type AmountAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head   *AckHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`      //公共头部
	Amount int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` //余额
}

func (x *AmountAck) Reset() {
	*x = AmountAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmountAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmountAck) ProtoMessage() {}

func (x *AmountAck) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmountAck.ProtoReflect.Descriptor instead.
func (*AmountAck) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *AmountAck) GetHead() *AckHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *AmountAck) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 埋点请求
type Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *ReqHead     `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Type TrackingType `protobuf:"varint,2,opt,name=type,proto3,enum=idaproto.TrackingType" json:"type,omitempty"` //埋点类型
}

func (x *Tracking) Reset() {
	*x = Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracking) ProtoMessage() {}

func (x *Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracking.ProtoReflect.Descriptor instead.
func (*Tracking) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *Tracking) GetHead() *ReqHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Tracking) GetType() TrackingType {
	if x != nil {
		return x.Type
	}
	return TrackingType_login
}

// 请求配置
type SpinOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId  int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`    //游戏id
	Bet     int64 `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`                        //下注
	Raise   bool  `protobuf:"varint,3,opt,name=raise,proto3" json:"raise,omitempty"`                    //加注
	BuyFree bool  `protobuf:"varint,4,opt,name=buy_free,json=buyFree,proto3" json:"buy_free,omitempty"` //购买免费次数
	BuyRe   bool  `protobuf:"varint,5,opt,name=buy_re,json=buyRe,proto3" json:"buy_re,omitempty"`       //购买重转
}

func (x *SpinOpt) Reset() {
	*x = SpinOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpinOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpinOpt) ProtoMessage() {}

func (x *SpinOpt) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpinOpt.ProtoReflect.Descriptor instead.
func (*SpinOpt) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *SpinOpt) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *SpinOpt) GetBet() int64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *SpinOpt) GetRaise() bool {
	if x != nil {
		return x.Raise
	}
	return false
}

func (x *SpinOpt) GetBuyFree() bool {
	if x != nil {
		return x.BuyFree
	}
	return false
}

func (x *SpinOpt) GetBuyRe() bool {
	if x != nil {
		return x.BuyRe
	}
	return false
}

// 进入游戏回复
type IntoGameAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *AckHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Bet  []int64  `protobuf:"varint,4,rep,packed,name=bet,proto3" json:"bet,omitempty"` //下注
}

func (x *IntoGameAck) Reset() {
	*x = IntoGameAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntoGameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntoGameAck) ProtoMessage() {}

func (x *IntoGameAck) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntoGameAck.ProtoReflect.Descriptor instead.
func (*IntoGameAck) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *IntoGameAck) GetHead() *AckHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *IntoGameAck) GetBet() []int64 {
	if x != nil {
		return x.Bet
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x22, 0x5a, 0x0a, 0x08,
	0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x71, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x71, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x4c, 0x0a, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x71, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x64, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x08, 0x73, 0x70, 0x69,
	0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x62, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x69, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x79, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x62, 0x75, 0x79, 0x52, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x6f,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x64, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x62, 0x65, 0x74, 0x2a, 0xb0, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x91, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x92, 0x03, 0x12, 0x0b, 0x0a, 0x06, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x10, 0x93, 0x03, 0x12, 0x0e, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x10, 0x94, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x95, 0x03, 0x12, 0x0c, 0x0a, 0x07, 0x44, 0x62, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x96, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x97, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x98, 0x03, 0x2a, 0x5c, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x10, 0x04, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_common_proto_goTypes = []interface{}{
	(Code)(0),           // 0: idaproto.Code
	(TrackingType)(0),   // 1: idaproto.tracking_type
	(*ReqHead)(nil),     // 2: idaproto.req_head
	(*AckHead)(nil),     // 3: idaproto.ack_head
	(*Recharge)(nil),    // 4: idaproto.recharge
	(*RechargeAck)(nil), // 5: idaproto.recharge_ack
	(*Amount)(nil),      // 6: idaproto.amount
	(*AmountAck)(nil),   // 7: idaproto.amount_ack
	(*Tracking)(nil),    // 8: idaproto.tracking
	(*SpinOpt)(nil),     // 9: idaproto.spin_opt
	(*IntoGameAck)(nil), // 10: idaproto.into_game_ack
}
var file_common_proto_depIdxs = []int32{
	0, // 0: idaproto.ack_head.code:type_name -> idaproto.Code
	2, // 1: idaproto.recharge.head:type_name -> idaproto.req_head
	3, // 2: idaproto.recharge_ack.head:type_name -> idaproto.ack_head
	2, // 3: idaproto.amount.head:type_name -> idaproto.req_head
	3, // 4: idaproto.amount_ack.head:type_name -> idaproto.ack_head
	2, // 5: idaproto.tracking.head:type_name -> idaproto.req_head
	1, // 6: idaproto.tracking.type:type_name -> idaproto.tracking_type
	3, // 7: idaproto.into_game_ack.head:type_name -> idaproto.ack_head
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RechargeAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmountAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpinOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntoGameAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
